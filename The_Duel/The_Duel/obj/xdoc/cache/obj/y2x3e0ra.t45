id: The_Duel
language: CSharp
name:
  Default: The_Duel
qualifiedName:
  Default: The_Duel
type: Assembly
modifiers: {}
items:
- id: Program
  commentId: N:Program
  language: CSharp
  name:
    CSharp: Program
    VB: Program
  nameWithType:
    CSharp: Program
    VB: Program
  qualifiedName:
    CSharp: Program
    VB: Program
  type: Namespace
  assemblies:
  - The_Duel
  modifiers: {}
  items:
  - id: Program.Program
    commentId: T:Program.Program
    language: CSharp
    name:
      CSharp: Program
      VB: Program
    nameWithType:
      CSharp: Program
      VB: Program
    qualifiedName:
      CSharp: Program.Program
      VB: Program.Program
    type: Class
    assemblies:
    - The_Duel
    namespace: Program
    source:
      id: Program
      path: D:\The_Duel\The_Duel\The_Duel\Ohjelma.cs
      startLine: 12
    summary: "\nThe main class.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Program
        VB: Public Module Program
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items: []
  - id: Program.The_Duel
    commentId: T:Program.The_Duel
    language: CSharp
    name:
      CSharp: The_Duel
      VB: The_Duel
    nameWithType:
      CSharp: The_Duel
      VB: The_Duel
    qualifiedName:
      CSharp: Program.The_Duel
      VB: Program.The_Duel
    type: Class
    assemblies:
    - The_Duel
    namespace: Program
    source:
      id: The_Duel
      path: D:\The_Duel\The_Duel\The_Duel\The_Duel.cs
      startLine: 13
    summary: "\ncheckata\n"
    example: []
    syntax:
      content:
        CSharp: 'public class The_Duel : PhysicsGame, ControlContexted, GameObjectContainer, IDisposable'
        VB: >-
          Public Class The_Duel

              Inherits PhysicsGame

              Implements ControlContexted, GameObjectContainer, IDisposable
    inheritance:
    - System.Object
    - Jypeli.Game
    - Jypeli.PhysicsGameBase
    - Jypeli.PhysicsGame
    implements:
    - Jypeli.Controls.ControlContexted
    - Jypeli.GameObjectContainer
    - System.IDisposable
    inheritedMembers:
    - Jypeli.PhysicsGame.Instance
    - Jypeli.PhysicsGameBase.Joints
    - Jypeli.PhysicsGameBase.collisionHandlers
    - Jypeli.PhysicsGameBase.protectedCollisionHandlers
    - Jypeli.PhysicsGameBase.OnObjectAdded(Jypeli.IGameObject)
    - Jypeli.PhysicsGameBase.OnObjectRemoved(Jypeli.IGameObject)
    - Jypeli.PhysicsGameBase.StopAll
    - Jypeli.PhysicsGameBase.ClearAll
    - Jypeli.PhysicsGameBase.Update(Jypeli.Time)
    - Jypeli.PhysicsGameBase.Add(Jypeli.IAxleJoint)
    - Jypeli.PhysicsGameBase.AddCollisionHandler``2({O},Jypeli.CollisionHandler{{O},{T}})
    - Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.IPhysicsObject,Jypeli.CollisionHandler{Jypeli.IPhysicsObject,Jypeli.IPhysicsObject})
    - Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsObject})
    - Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsStructure})
    - Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsStructure,Jypeli.CollisionHandler{Jypeli.PhysicsStructure,Jypeli.PhysicsObject})
    - Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsStructure,Jypeli.CollisionHandler{Jypeli.PhysicsStructure,Jypeli.PhysicsStructure})
    - Jypeli.PhysicsGameBase.AddCollisionHandlerByRef``2({O},{T},Jypeli.CollisionHandler{{O},{T}})
    - Jypeli.PhysicsGameBase.AddCollisionHandlerByTag``2({O},System.Object,Jypeli.CollisionHandler{{O},{T}})
    - Jypeli.PhysicsGameBase.AddCollisionHandler``2({O},System.Object,Jypeli.CollisionHandler{{O},{T}})
    - Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.IPhysicsObject,System.Object,Jypeli.CollisionHandler{Jypeli.IPhysicsObject,Jypeli.IPhysicsObject})
    - Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,System.Object,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsObject})
    - Jypeli.PhysicsGameBase.RemoveCollisionHandlers(Jypeli.PhysicsObject,Jypeli.PhysicsObject,System.Object,System.Delegate)
    - Jypeli.PhysicsGameBase.Engine
    - Jypeli.PhysicsGameBase.Gravity
    - Jypeli.PhysicsGameBase.PhysicsEnabled
    - Jypeli.Game.LoadImage(System.String)
    - Jypeli.Game.LoadImageFromResources(System.String)
    - Jypeli.Game.LoadImages(System.String[])
    - Jypeli.Game.LoadImages(System.String,System.Int32,System.Int32,System.Boolean)
    - Jypeli.Game.PlaySound(System.String)
    - Jypeli.Game.LoadSoundEffect(System.String)
    - Jypeli.Game.LoadSoundEffectFromResources(System.String)
    - Jypeli.Game.LoadSoundEffects(System.String[])
    - Jypeli.Game.LoadFont(System.String)
    - Jypeli.Game.ClearControls
    - Jypeli.Game.ShowControlHelp
    - Jypeli.Game.ShowControlHelp(Jypeli.Controls.IController)
    - Jypeli.Game.AssertInitialized(System.Action)
    - Jypeli.Game.DoNextUpdate(System.Action)
    - Jypeli.Game.DoNextUpdate``1(System.Action{{T1}},{T1})
    - Jypeli.Game.DoNextUpdate``2(System.Action{{T1},{T2}},{T1},{T2})
    - Jypeli.Game.AssertInitialized``1(System.Action{{T1}},{T1})
    - Jypeli.Game.ConfirmExit
    - Jypeli.Game.ConfirmExit(System.Action)
    - Jypeli.Game.OnExiting(System.Object,System.EventArgs)
    - Jypeli.Game.Add(Jypeli.Effects.Light)
    - Jypeli.Game.ClearLights
    - Jypeli.Game.AddCustomHandler(System.Func{System.Boolean},System.Action)
    - Jypeli.Game.AddCustomHandler``1({T},System.Predicate{{T}},System.Action{{T}})
    - Jypeli.Game.AddCustomHandler``2({T1},{T2},System.Func{{T1},{T2},System.Boolean},System.Action{{T1},{T2}})
    - Jypeli.Game.AddCustomHandler``3({T1},{T2},{T3},System.Func{{T1},{T2},{T3},System.Boolean},System.Action{{T1},{T2},{T3}})
    - Jypeli.Game.UpdateHandlers(Jypeli.Time)
    - Jypeli.Game.AddFactory``1(System.String,Jypeli.Factory.FactoryMethod)
    - Jypeli.Game.RemoveFactory``1(System.String,Jypeli.Factory.FactoryMethod)
    - Jypeli.Game.FactoryCreate``1(System.String)
    - Jypeli.Game.Run(System.Boolean,System.Boolean,System.Int32,System.Int32)
    - Jypeli.Game.RunOneFrame(System.String)
    - Jypeli.Game.Initialize
    - Jypeli.Game.Paint(Jypeli.Canvas)
    - Jypeli.Game.OnExit
    - Jypeli.Game.Exit
    - Jypeli.Game.Dispose
    - Jypeli.Game.SetWindowPosition(System.Int32,System.Int32)
    - Jypeli.Game.CenterWindow
    - Jypeli.Game.SetWindowSize(System.Int32,System.Int32)
    - Jypeli.Game.SetWindowSize(System.Int32,System.Int32,System.Boolean)
    - Jypeli.Game.Add(Jypeli.IGameObject)
    - Jypeli.Game.Add(Jypeli.IGameObject,System.Int32)
    - Jypeli.Game.Add(Jypeli.Layer)
    - Jypeli.Game.Remove(Jypeli.IGameObject)
    - Jypeli.Game.Remove(Jypeli.Layer)
    - Jypeli.Game.Remove(Jypeli.Effects.Light)
    - Jypeli.Game.ClearGameObjects
    - Jypeli.Game.ResetLayers
    - Jypeli.Game.RemoveAllLayers
    - Jypeli.Game.GetObjects(System.Predicate{Jypeli.GameObject})
    - Jypeli.Game.GetAllObjects
    - Jypeli.Game.GetObjectsWithTag(System.String[])
    - Jypeli.Game.GetObjectsWithTag(System.Object[])
    - Jypeli.Game.GetFirstObject(System.Predicate{Jypeli.GameObject})
    - Jypeli.Game.GetObjectsAt(Jypeli.Vector)
    - Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Double)
    - Jypeli.Game.GetObjectAt(Jypeli.Vector)
    - Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Double)
    - Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Object)
    - Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Object)
    - Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Object,System.Double)
    - Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Object,System.Double)
    - Jypeli.Game.GetObjectsBetween(Jypeli.Vector,Jypeli.Vector)
    - Jypeli.Game.GetFirstWidget(System.Predicate{Jypeli.Widget})
    - Jypeli.Game.GetWidgetAt(Jypeli.Vector)
    - Jypeli.Game.Pause
    - Jypeli.Game.ClearTimers
    - Jypeli.Game.PausedUpdate(Jypeli.Time)
    - Jypeli.Game.OnUpdate(System.Double)
    - Jypeli.Game.OnDraw(System.Double)
    - Jypeli.Game.MediaPlayer
    - Jypeli.Game.MasterVolume
    - Jypeli.Game.ResourceContent
    - Jypeli.Game.Keyboard
    - Jypeli.Game.Mouse
    - Jypeli.Game.Accelerometer
    - Jypeli.Game.TouchPanel
    - Jypeli.Game.PhoneBackButton
    - Jypeli.Game.GameControllers
    - Jypeli.Game.ControllerOne
    - Jypeli.Game.ControllerTwo
    - Jypeli.Game.ControllerThree
    - Jypeli.Game.ControllerFour
    - Jypeli.Game.ControlContext
    - Jypeli.Game.IsModal
    - Jypeli.Game.DebugLayer
    - Jypeli.Game.DebugKeyEnabled
    - Jypeli.Game.DebugScreenVisible
    - Jypeli.Game.FPSWindow
    - Jypeli.Game.FPSDisplay
    - Jypeli.Game.LayerWindow
    - Jypeli.Game.LayerDisplay
    - Jypeli.Game.Wind
    - Jypeli.Game.TotalFramesToRun
    - Jypeli.Game.FrameCounter
    - Jypeli.Game.SavedFrameCounter
    - Jypeli.Game.FramesToSkip
    - Jypeli.Game.SaveOutput
    - Jypeli.Game.SaveOutputToConsole
    - Jypeli.Game.Headless
    - Jypeli.Game.Device
    - Jypeli.Game.DataStorage
    - Jypeli.Game.FarseerGame
    - Jypeli.Game.Camera
    - Jypeli.Game.Name
    - Jypeli.Game.AudioEnabled
    - Jypeli.Game.Level
    - Jypeli.Game.Closing
    - Jypeli.Game.GraphicsDevice
    - Jypeli.Game.IsFullScreen
    - Jypeli.Game.Screen
    - Jypeli.Game.SmoothTextures
    - Jypeli.Game.Layers
    - Jypeli.Game.StaticLayers
    - Jypeli.Game.DynamicLayers
    - Jypeli.Game.MinLayer
    - Jypeli.Game.MaxLayer
    - Jypeli.Game.LayerCount
    - Jypeli.Game.FixedTimeStep
    - Jypeli.Game.IsPaused
    - Jypeli.Game.Time
    - Jypeli.Game.RealTime
    - Jypeli.Game.MessageDisplay
    - Jypeli.Game.InstanceInitialized
    - Jypeli.Game.Exiting
    - Jypeli.Game.TextInput
    - Jypeli.Game.WindowSizeChanged
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Program.The_Duel.Begin
      commentId: M:Program.The_Duel.Begin
      language: CSharp
      name:
        CSharp: Begin()
        VB: Begin()
      nameWithType:
        CSharp: The_Duel.Begin()
        VB: The_Duel.Begin()
      qualifiedName:
        CSharp: Program.The_Duel.Begin()
        VB: Program.The_Duel.Begin()
      type: Method
      assemblies:
      - The_Duel
      namespace: Program
      source:
        id: Begin
        path: D:\The_Duel\The_Duel\The_Duel\The_Duel.cs
        startLine: 28
      summary: "\n:TODO\n"
      example: []
      syntax:
        content:
          CSharp: public override void Begin()
          VB: Public Overrides Sub Begin
      overload: Program.The_Duel.Begin*
      overridden: Jypeli.Game.Begin
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Program.The_Duel.CreateBoxes
      commentId: M:Program.The_Duel.CreateBoxes
      language: CSharp
      name:
        CSharp: CreateBoxes()
        VB: CreateBoxes()
      nameWithType:
        CSharp: The_Duel.CreateBoxes()
        VB: The_Duel.CreateBoxes()
      qualifiedName:
        CSharp: Program.The_Duel.CreateBoxes()
        VB: Program.The_Duel.CreateBoxes()
      type: Method
      assemblies:
      - The_Duel
      namespace: Program
      source:
        id: CreateBoxes
        path: D:\The_Duel\The_Duel\The_Duel\The_Duel.cs
        startLine: 205
      summary: "\n:TODO\n"
      example: []
      syntax:
        content:
          CSharp: public void CreateBoxes()
          VB: Public Sub CreateBoxes
      overload: Program.The_Duel.CreateBoxes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  Program.Program:
    name:
      CSharp:
      - id: Program.Program
        name: Program
        nameWithType: Program
        qualifiedName: Program.Program
      VB:
      - id: Program.Program
        name: Program
        nameWithType: Program
        qualifiedName: Program.Program
    isDefinition: true
    commentId: T:Program.Program
  Jypeli:
    name:
      CSharp:
      - name: Jypeli
        nameWithType: Jypeli
        qualifiedName: Jypeli
        isExternal: true
      VB:
      - name: Jypeli
        nameWithType: Jypeli
        qualifiedName: Jypeli
    isDefinition: true
    commentId: N:Jypeli
  Jypeli.PhysicsGame:
    name:
      CSharp:
      - id: Jypeli.PhysicsGame
        name: PhysicsGame
        nameWithType: PhysicsGame
        qualifiedName: Jypeli.PhysicsGame
        isExternal: true
      VB:
      - id: Jypeli.PhysicsGame
        name: PhysicsGame
        nameWithType: PhysicsGame
        qualifiedName: Jypeli.PhysicsGame
        isExternal: true
    isDefinition: true
    parent: Jypeli
    commentId: T:Jypeli.PhysicsGame
  Jypeli.PhysicsGame.Instance:
    name:
      CSharp:
      - id: Jypeli.PhysicsGame.Instance
        name: Instance
        nameWithType: PhysicsGame.Instance
        qualifiedName: Jypeli.PhysicsGame.Instance
        isExternal: true
      VB:
      - id: Jypeli.PhysicsGame.Instance
        name: Instance
        nameWithType: PhysicsGame.Instance
        qualifiedName: Jypeli.PhysicsGame.Instance
        isExternal: true
    isDefinition: true
    parent: Jypeli.PhysicsGame
    commentId: P:Jypeli.PhysicsGame.Instance
  Jypeli.PhysicsGameBase:
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase
        name: PhysicsGameBase
        nameWithType: PhysicsGameBase
        qualifiedName: Jypeli.PhysicsGameBase
        isExternal: true
      VB:
      - id: Jypeli.PhysicsGameBase
        name: PhysicsGameBase
        nameWithType: PhysicsGameBase
        qualifiedName: Jypeli.PhysicsGameBase
        isExternal: true
    isDefinition: true
    parent: Jypeli
    commentId: T:Jypeli.PhysicsGameBase
  Jypeli.PhysicsGameBase.Joints:
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.Joints
        name: Joints
        nameWithType: PhysicsGameBase.Joints
        qualifiedName: Jypeli.PhysicsGameBase.Joints
        isExternal: true
      VB:
      - id: Jypeli.PhysicsGameBase.Joints
        name: Joints
        nameWithType: PhysicsGameBase.Joints
        qualifiedName: Jypeli.PhysicsGameBase.Joints
        isExternal: true
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: F:Jypeli.PhysicsGameBase.Joints
  Jypeli.PhysicsGameBase.collisionHandlers:
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.collisionHandlers
        name: collisionHandlers
        nameWithType: PhysicsGameBase.collisionHandlers
        qualifiedName: Jypeli.PhysicsGameBase.collisionHandlers
        isExternal: true
      VB:
      - id: Jypeli.PhysicsGameBase.collisionHandlers
        name: collisionHandlers
        nameWithType: PhysicsGameBase.collisionHandlers
        qualifiedName: Jypeli.PhysicsGameBase.collisionHandlers
        isExternal: true
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: F:Jypeli.PhysicsGameBase.collisionHandlers
  Jypeli.PhysicsGameBase.protectedCollisionHandlers:
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.protectedCollisionHandlers
        name: protectedCollisionHandlers
        nameWithType: PhysicsGameBase.protectedCollisionHandlers
        qualifiedName: Jypeli.PhysicsGameBase.protectedCollisionHandlers
        isExternal: true
      VB:
      - id: Jypeli.PhysicsGameBase.protectedCollisionHandlers
        name: protectedCollisionHandlers
        nameWithType: PhysicsGameBase.protectedCollisionHandlers
        qualifiedName: Jypeli.PhysicsGameBase.protectedCollisionHandlers
        isExternal: true
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: F:Jypeli.PhysicsGameBase.protectedCollisionHandlers
  Jypeli.PhysicsGameBase.OnObjectAdded(Jypeli.IGameObject):
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.OnObjectAdded(Jypeli.IGameObject)
        name: OnObjectAdded
        nameWithType: PhysicsGameBase.OnObjectAdded
        qualifiedName: Jypeli.PhysicsGameBase.OnObjectAdded
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IGameObject
        name: IGameObject
        nameWithType: IGameObject
        qualifiedName: Jypeli.IGameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.OnObjectAdded(Jypeli.IGameObject)
        name: OnObjectAdded
        nameWithType: PhysicsGameBase.OnObjectAdded
        qualifiedName: Jypeli.PhysicsGameBase.OnObjectAdded
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IGameObject
        name: IGameObject
        nameWithType: IGameObject
        qualifiedName: Jypeli.IGameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.OnObjectAdded(Jypeli.IGameObject)
  Jypeli.PhysicsGameBase.OnObjectRemoved(Jypeli.IGameObject):
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.OnObjectRemoved(Jypeli.IGameObject)
        name: OnObjectRemoved
        nameWithType: PhysicsGameBase.OnObjectRemoved
        qualifiedName: Jypeli.PhysicsGameBase.OnObjectRemoved
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IGameObject
        name: IGameObject
        nameWithType: IGameObject
        qualifiedName: Jypeli.IGameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.OnObjectRemoved(Jypeli.IGameObject)
        name: OnObjectRemoved
        nameWithType: PhysicsGameBase.OnObjectRemoved
        qualifiedName: Jypeli.PhysicsGameBase.OnObjectRemoved
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IGameObject
        name: IGameObject
        nameWithType: IGameObject
        qualifiedName: Jypeli.IGameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.OnObjectRemoved(Jypeli.IGameObject)
  Jypeli.PhysicsGameBase.StopAll:
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.StopAll
        name: StopAll
        nameWithType: PhysicsGameBase.StopAll
        qualifiedName: Jypeli.PhysicsGameBase.StopAll
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.StopAll
        name: StopAll
        nameWithType: PhysicsGameBase.StopAll
        qualifiedName: Jypeli.PhysicsGameBase.StopAll
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.StopAll
  Jypeli.PhysicsGameBase.ClearAll:
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.ClearAll
        name: ClearAll
        nameWithType: PhysicsGameBase.ClearAll
        qualifiedName: Jypeli.PhysicsGameBase.ClearAll
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.ClearAll
        name: ClearAll
        nameWithType: PhysicsGameBase.ClearAll
        qualifiedName: Jypeli.PhysicsGameBase.ClearAll
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.ClearAll
  Jypeli.PhysicsGameBase.Update(Jypeli.Time):
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.Update(Jypeli.Time)
        name: Update
        nameWithType: PhysicsGameBase.Update
        qualifiedName: Jypeli.PhysicsGameBase.Update
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Time
        name: Time
        nameWithType: Time
        qualifiedName: Jypeli.Time
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.Update(Jypeli.Time)
        name: Update
        nameWithType: PhysicsGameBase.Update
        qualifiedName: Jypeli.PhysicsGameBase.Update
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Time
        name: Time
        nameWithType: Time
        qualifiedName: Jypeli.Time
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.Update(Jypeli.Time)
  Jypeli.PhysicsGameBase.Add(Jypeli.IAxleJoint):
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.Add(Jypeli.IAxleJoint)
        name: Add
        nameWithType: PhysicsGameBase.Add
        qualifiedName: Jypeli.PhysicsGameBase.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IAxleJoint
        name: IAxleJoint
        nameWithType: IAxleJoint
        qualifiedName: Jypeli.IAxleJoint
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.Add(Jypeli.IAxleJoint)
        name: Add
        nameWithType: PhysicsGameBase.Add
        qualifiedName: Jypeli.PhysicsGameBase.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IAxleJoint
        name: IAxleJoint
        nameWithType: IAxleJoint
        qualifiedName: Jypeli.IAxleJoint
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.Add(Jypeli.IAxleJoint)
  Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,Jypeli.CollisionHandler{``0,``1}):
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandler<O, T>
        nameWithType: PhysicsGameBase.AddCollisionHandler<O, T>
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler<O, T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandler(Of O, T)
        nameWithType: PhysicsGameBase.AddCollisionHandler(Of O, T)
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler(Of O, T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,Jypeli.CollisionHandler{``0,``1})
  Jypeli.PhysicsGameBase.AddCollisionHandler``2({O},Jypeli.CollisionHandler{{O},{T}}):
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandler<O, T>
        nameWithType: PhysicsGameBase.AddCollisionHandler<O, T>
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler<O, T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandler(Of O, T)
        nameWithType: PhysicsGameBase.AddCollisionHandler(Of O, T)
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler(Of O, T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,Jypeli.CollisionHandler{``0,``1})
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,Jypeli.CollisionHandler{``0,``1})
  ? Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.IPhysicsObject,Jypeli.CollisionHandler{Jypeli.IPhysicsObject,Jypeli.IPhysicsObject})
  : name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.IPhysicsObject,Jypeli.CollisionHandler{Jypeli.IPhysicsObject,Jypeli.IPhysicsObject})
        name: AddCollisionHandler
        nameWithType: PhysicsGameBase.AddCollisionHandler
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IPhysicsObject
        name: IPhysicsObject
        nameWithType: IPhysicsObject
        qualifiedName: Jypeli.IPhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Jypeli.IPhysicsObject
        name: IPhysicsObject
        nameWithType: IPhysicsObject
        qualifiedName: Jypeli.IPhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.IPhysicsObject
        name: IPhysicsObject
        nameWithType: IPhysicsObject
        qualifiedName: Jypeli.IPhysicsObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.IPhysicsObject,Jypeli.CollisionHandler{Jypeli.IPhysicsObject,Jypeli.IPhysicsObject})
        name: AddCollisionHandler
        nameWithType: PhysicsGameBase.AddCollisionHandler
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IPhysicsObject
        name: IPhysicsObject
        nameWithType: IPhysicsObject
        qualifiedName: Jypeli.IPhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Jypeli.IPhysicsObject
        name: IPhysicsObject
        nameWithType: IPhysicsObject
        qualifiedName: Jypeli.IPhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.IPhysicsObject
        name: IPhysicsObject
        nameWithType: IPhysicsObject
        qualifiedName: Jypeli.IPhysicsObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.IPhysicsObject,Jypeli.CollisionHandler{Jypeli.IPhysicsObject,Jypeli.IPhysicsObject})
  ? Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsObject})
  : name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsObject})
        name: AddCollisionHandler
        nameWithType: PhysicsGameBase.AddCollisionHandler
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsObject})
        name: AddCollisionHandler
        nameWithType: PhysicsGameBase.AddCollisionHandler
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsObject})
  ? Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsStructure})
  : name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsStructure})
        name: AddCollisionHandler
        nameWithType: PhysicsGameBase.AddCollisionHandler
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.PhysicsStructure
        name: PhysicsStructure
        nameWithType: PhysicsStructure
        qualifiedName: Jypeli.PhysicsStructure
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsStructure})
        name: AddCollisionHandler
        nameWithType: PhysicsGameBase.AddCollisionHandler
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.PhysicsStructure
        name: PhysicsStructure
        nameWithType: PhysicsStructure
        qualifiedName: Jypeli.PhysicsStructure
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsStructure})
  ? Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsStructure,Jypeli.CollisionHandler{Jypeli.PhysicsStructure,Jypeli.PhysicsObject})
  : name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsStructure,Jypeli.CollisionHandler{Jypeli.PhysicsStructure,Jypeli.PhysicsObject})
        name: AddCollisionHandler
        nameWithType: PhysicsGameBase.AddCollisionHandler
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.PhysicsStructure
        name: PhysicsStructure
        nameWithType: PhysicsStructure
        qualifiedName: Jypeli.PhysicsStructure
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Jypeli.PhysicsStructure
        name: PhysicsStructure
        nameWithType: PhysicsStructure
        qualifiedName: Jypeli.PhysicsStructure
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsStructure,Jypeli.CollisionHandler{Jypeli.PhysicsStructure,Jypeli.PhysicsObject})
        name: AddCollisionHandler
        nameWithType: PhysicsGameBase.AddCollisionHandler
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.PhysicsStructure
        name: PhysicsStructure
        nameWithType: PhysicsStructure
        qualifiedName: Jypeli.PhysicsStructure
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Jypeli.PhysicsStructure
        name: PhysicsStructure
        nameWithType: PhysicsStructure
        qualifiedName: Jypeli.PhysicsStructure
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsStructure,Jypeli.CollisionHandler{Jypeli.PhysicsStructure,Jypeli.PhysicsObject})
  ? Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsStructure,Jypeli.CollisionHandler{Jypeli.PhysicsStructure,Jypeli.PhysicsStructure})
  : name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsStructure,Jypeli.CollisionHandler{Jypeli.PhysicsStructure,Jypeli.PhysicsStructure})
        name: AddCollisionHandler
        nameWithType: PhysicsGameBase.AddCollisionHandler
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.PhysicsStructure
        name: PhysicsStructure
        nameWithType: PhysicsStructure
        qualifiedName: Jypeli.PhysicsStructure
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Jypeli.PhysicsStructure
        name: PhysicsStructure
        nameWithType: PhysicsStructure
        qualifiedName: Jypeli.PhysicsStructure
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.PhysicsStructure
        name: PhysicsStructure
        nameWithType: PhysicsStructure
        qualifiedName: Jypeli.PhysicsStructure
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsStructure,Jypeli.CollisionHandler{Jypeli.PhysicsStructure,Jypeli.PhysicsStructure})
        name: AddCollisionHandler
        nameWithType: PhysicsGameBase.AddCollisionHandler
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.PhysicsStructure
        name: PhysicsStructure
        nameWithType: PhysicsStructure
        qualifiedName: Jypeli.PhysicsStructure
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Jypeli.PhysicsStructure
        name: PhysicsStructure
        nameWithType: PhysicsStructure
        qualifiedName: Jypeli.PhysicsStructure
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.PhysicsStructure
        name: PhysicsStructure
        nameWithType: PhysicsStructure
        qualifiedName: Jypeli.PhysicsStructure
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsStructure,Jypeli.CollisionHandler{Jypeli.PhysicsStructure,Jypeli.PhysicsStructure})
  Jypeli.PhysicsGameBase.AddCollisionHandlerByRef``2(``0,``1,Jypeli.CollisionHandler{``0,``1}):
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandlerByRef``2(``0,``1,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandlerByRef<O, T>
        nameWithType: PhysicsGameBase.AddCollisionHandlerByRef<O, T>
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandlerByRef<O, T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandlerByRef``2(``0,``1,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandlerByRef(Of O, T)
        nameWithType: PhysicsGameBase.AddCollisionHandlerByRef(Of O, T)
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandlerByRef(Of O, T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandlerByRef``2(``0,``1,Jypeli.CollisionHandler{``0,``1})
  Jypeli.PhysicsGameBase.AddCollisionHandlerByRef``2({O},{T},Jypeli.CollisionHandler{{O},{T}}):
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandlerByRef``2(``0,``1,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandlerByRef<O, T>
        nameWithType: PhysicsGameBase.AddCollisionHandlerByRef<O, T>
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandlerByRef<O, T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandlerByRef``2(``0,``1,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandlerByRef(Of O, T)
        nameWithType: PhysicsGameBase.AddCollisionHandlerByRef(Of O, T)
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandlerByRef(Of O, T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Jypeli.PhysicsGameBase.AddCollisionHandlerByRef``2(``0,``1,Jypeli.CollisionHandler{``0,``1})
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandlerByRef``2(``0,``1,Jypeli.CollisionHandler{``0,``1})
  Jypeli.PhysicsGameBase.AddCollisionHandlerByTag``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1}):
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandlerByTag``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandlerByTag<O, T>
        nameWithType: PhysicsGameBase.AddCollisionHandlerByTag<O, T>
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandlerByTag<O, T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandlerByTag``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandlerByTag(Of O, T)
        nameWithType: PhysicsGameBase.AddCollisionHandlerByTag(Of O, T)
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandlerByTag(Of O, T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandlerByTag``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})
  Jypeli.PhysicsGameBase.AddCollisionHandlerByTag``2({O},System.Object,Jypeli.CollisionHandler{{O},{T}}):
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandlerByTag``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandlerByTag<O, T>
        nameWithType: PhysicsGameBase.AddCollisionHandlerByTag<O, T>
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandlerByTag<O, T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandlerByTag``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandlerByTag(Of O, T)
        nameWithType: PhysicsGameBase.AddCollisionHandlerByTag(Of O, T)
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandlerByTag(Of O, T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Jypeli.PhysicsGameBase.AddCollisionHandlerByTag``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandlerByTag``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})
  Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1}):
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandler<O, T>
        nameWithType: PhysicsGameBase.AddCollisionHandler<O, T>
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler<O, T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandler(Of O, T)
        nameWithType: PhysicsGameBase.AddCollisionHandler(Of O, T)
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler(Of O, T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})
  Jypeli.PhysicsGameBase.AddCollisionHandler``2({O},System.Object,Jypeli.CollisionHandler{{O},{T}}):
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandler<O, T>
        nameWithType: PhysicsGameBase.AddCollisionHandler<O, T>
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler<O, T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})
        name: AddCollisionHandler(Of O, T)
        nameWithType: PhysicsGameBase.AddCollisionHandler(Of O, T)
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler(Of O, T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: O
        nameWithType: O
        qualifiedName: O
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandler``2(``0,System.Object,Jypeli.CollisionHandler{``0,``1})
  ? Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.IPhysicsObject,System.Object,Jypeli.CollisionHandler{Jypeli.IPhysicsObject,Jypeli.IPhysicsObject})
  : name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.IPhysicsObject,System.Object,Jypeli.CollisionHandler{Jypeli.IPhysicsObject,Jypeli.IPhysicsObject})
        name: AddCollisionHandler
        nameWithType: PhysicsGameBase.AddCollisionHandler
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IPhysicsObject
        name: IPhysicsObject
        nameWithType: IPhysicsObject
        qualifiedName: Jypeli.IPhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Jypeli.IPhysicsObject
        name: IPhysicsObject
        nameWithType: IPhysicsObject
        qualifiedName: Jypeli.IPhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.IPhysicsObject
        name: IPhysicsObject
        nameWithType: IPhysicsObject
        qualifiedName: Jypeli.IPhysicsObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.IPhysicsObject,System.Object,Jypeli.CollisionHandler{Jypeli.IPhysicsObject,Jypeli.IPhysicsObject})
        name: AddCollisionHandler
        nameWithType: PhysicsGameBase.AddCollisionHandler
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IPhysicsObject
        name: IPhysicsObject
        nameWithType: IPhysicsObject
        qualifiedName: Jypeli.IPhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Jypeli.IPhysicsObject
        name: IPhysicsObject
        nameWithType: IPhysicsObject
        qualifiedName: Jypeli.IPhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.IPhysicsObject
        name: IPhysicsObject
        nameWithType: IPhysicsObject
        qualifiedName: Jypeli.IPhysicsObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.IPhysicsObject,System.Object,Jypeli.CollisionHandler{Jypeli.IPhysicsObject,Jypeli.IPhysicsObject})
  ? Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,System.Object,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsObject})
  : name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,System.Object,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsObject})
        name: AddCollisionHandler
        nameWithType: PhysicsGameBase.AddCollisionHandler
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,System.Object,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsObject})
        name: AddCollisionHandler
        nameWithType: PhysicsGameBase.AddCollisionHandler
        qualifiedName: Jypeli.PhysicsGameBase.AddCollisionHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.CollisionHandler`2
        name: CollisionHandler
        nameWithType: CollisionHandler
        qualifiedName: Jypeli.CollisionHandler
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.AddCollisionHandler(Jypeli.PhysicsObject,System.Object,Jypeli.CollisionHandler{Jypeli.PhysicsObject,Jypeli.PhysicsObject})
  Jypeli.PhysicsGameBase.RemoveCollisionHandlers(Jypeli.PhysicsObject,Jypeli.PhysicsObject,System.Object,System.Delegate):
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.RemoveCollisionHandlers(Jypeli.PhysicsObject,Jypeli.PhysicsObject,System.Object,System.Delegate)
        name: RemoveCollisionHandlers
        nameWithType: PhysicsGameBase.RemoveCollisionHandlers
        qualifiedName: Jypeli.PhysicsGameBase.RemoveCollisionHandlers
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Delegate
        name: Delegate
        nameWithType: Delegate
        qualifiedName: System.Delegate
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.PhysicsGameBase.RemoveCollisionHandlers(Jypeli.PhysicsObject,Jypeli.PhysicsObject,System.Object,System.Delegate)
        name: RemoveCollisionHandlers
        nameWithType: PhysicsGameBase.RemoveCollisionHandlers
        qualifiedName: Jypeli.PhysicsGameBase.RemoveCollisionHandlers
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.PhysicsObject
        name: PhysicsObject
        nameWithType: PhysicsObject
        qualifiedName: Jypeli.PhysicsObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Delegate
        name: Delegate
        nameWithType: Delegate
        qualifiedName: System.Delegate
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: M:Jypeli.PhysicsGameBase.RemoveCollisionHandlers(Jypeli.PhysicsObject,Jypeli.PhysicsObject,System.Object,System.Delegate)
  Jypeli.PhysicsGameBase.Engine:
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.Engine
        name: Engine
        nameWithType: PhysicsGameBase.Engine
        qualifiedName: Jypeli.PhysicsGameBase.Engine
        isExternal: true
      VB:
      - id: Jypeli.PhysicsGameBase.Engine
        name: Engine
        nameWithType: PhysicsGameBase.Engine
        qualifiedName: Jypeli.PhysicsGameBase.Engine
        isExternal: true
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: P:Jypeli.PhysicsGameBase.Engine
  Jypeli.PhysicsGameBase.Gravity:
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.Gravity
        name: Gravity
        nameWithType: PhysicsGameBase.Gravity
        qualifiedName: Jypeli.PhysicsGameBase.Gravity
        isExternal: true
      VB:
      - id: Jypeli.PhysicsGameBase.Gravity
        name: Gravity
        nameWithType: PhysicsGameBase.Gravity
        qualifiedName: Jypeli.PhysicsGameBase.Gravity
        isExternal: true
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: P:Jypeli.PhysicsGameBase.Gravity
  Jypeli.PhysicsGameBase.PhysicsEnabled:
    name:
      CSharp:
      - id: Jypeli.PhysicsGameBase.PhysicsEnabled
        name: PhysicsEnabled
        nameWithType: PhysicsGameBase.PhysicsEnabled
        qualifiedName: Jypeli.PhysicsGameBase.PhysicsEnabled
        isExternal: true
      VB:
      - id: Jypeli.PhysicsGameBase.PhysicsEnabled
        name: PhysicsEnabled
        nameWithType: PhysicsGameBase.PhysicsEnabled
        qualifiedName: Jypeli.PhysicsGameBase.PhysicsEnabled
        isExternal: true
    isDefinition: true
    parent: Jypeli.PhysicsGameBase
    commentId: P:Jypeli.PhysicsGameBase.PhysicsEnabled
  Jypeli.Game:
    name:
      CSharp:
      - id: Jypeli.Game
        name: Game
        nameWithType: Game
        qualifiedName: Jypeli.Game
        isExternal: true
      VB:
      - id: Jypeli.Game
        name: Game
        nameWithType: Game
        qualifiedName: Jypeli.Game
        isExternal: true
    isDefinition: true
    parent: Jypeli
    commentId: T:Jypeli.Game
  Jypeli.Game.LoadImage(System.String):
    name:
      CSharp:
      - id: Jypeli.Game.LoadImage(System.String)
        name: LoadImage
        nameWithType: Game.LoadImage
        qualifiedName: Jypeli.Game.LoadImage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.LoadImage(System.String)
        name: LoadImage
        nameWithType: Game.LoadImage
        qualifiedName: Jypeli.Game.LoadImage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.LoadImage(System.String)
  Jypeli.Game.LoadImageFromResources(System.String):
    name:
      CSharp:
      - id: Jypeli.Game.LoadImageFromResources(System.String)
        name: LoadImageFromResources
        nameWithType: Game.LoadImageFromResources
        qualifiedName: Jypeli.Game.LoadImageFromResources
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.LoadImageFromResources(System.String)
        name: LoadImageFromResources
        nameWithType: Game.LoadImageFromResources
        qualifiedName: Jypeli.Game.LoadImageFromResources
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.LoadImageFromResources(System.String)
  Jypeli.Game.LoadImages(System.String[]):
    name:
      CSharp:
      - id: Jypeli.Game.LoadImages(System.String[])
        name: LoadImages
        nameWithType: Game.LoadImages
        qualifiedName: Jypeli.Game.LoadImages
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.LoadImages(System.String[])
        name: LoadImages
        nameWithType: Game.LoadImages
        qualifiedName: Jypeli.Game.LoadImages
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.LoadImages(System.String[])
  Jypeli.Game.LoadImages(System.String,System.Int32,System.Int32,System.Boolean):
    name:
      CSharp:
      - id: Jypeli.Game.LoadImages(System.String,System.Int32,System.Int32,System.Boolean)
        name: LoadImages
        nameWithType: Game.LoadImages
        qualifiedName: Jypeli.Game.LoadImages
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.LoadImages(System.String,System.Int32,System.Int32,System.Boolean)
        name: LoadImages
        nameWithType: Game.LoadImages
        qualifiedName: Jypeli.Game.LoadImages
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.LoadImages(System.String,System.Int32,System.Int32,System.Boolean)
  Jypeli.Game.PlaySound(System.String):
    name:
      CSharp:
      - id: Jypeli.Game.PlaySound(System.String)
        name: PlaySound
        nameWithType: Game.PlaySound
        qualifiedName: Jypeli.Game.PlaySound
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.PlaySound(System.String)
        name: PlaySound
        nameWithType: Game.PlaySound
        qualifiedName: Jypeli.Game.PlaySound
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.PlaySound(System.String)
  Jypeli.Game.LoadSoundEffect(System.String):
    name:
      CSharp:
      - id: Jypeli.Game.LoadSoundEffect(System.String)
        name: LoadSoundEffect
        nameWithType: Game.LoadSoundEffect
        qualifiedName: Jypeli.Game.LoadSoundEffect
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.LoadSoundEffect(System.String)
        name: LoadSoundEffect
        nameWithType: Game.LoadSoundEffect
        qualifiedName: Jypeli.Game.LoadSoundEffect
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.LoadSoundEffect(System.String)
  Jypeli.Game.LoadSoundEffectFromResources(System.String):
    name:
      CSharp:
      - id: Jypeli.Game.LoadSoundEffectFromResources(System.String)
        name: LoadSoundEffectFromResources
        nameWithType: Game.LoadSoundEffectFromResources
        qualifiedName: Jypeli.Game.LoadSoundEffectFromResources
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.LoadSoundEffectFromResources(System.String)
        name: LoadSoundEffectFromResources
        nameWithType: Game.LoadSoundEffectFromResources
        qualifiedName: Jypeli.Game.LoadSoundEffectFromResources
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.LoadSoundEffectFromResources(System.String)
  Jypeli.Game.LoadSoundEffects(System.String[]):
    name:
      CSharp:
      - id: Jypeli.Game.LoadSoundEffects(System.String[])
        name: LoadSoundEffects
        nameWithType: Game.LoadSoundEffects
        qualifiedName: Jypeli.Game.LoadSoundEffects
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.LoadSoundEffects(System.String[])
        name: LoadSoundEffects
        nameWithType: Game.LoadSoundEffects
        qualifiedName: Jypeli.Game.LoadSoundEffects
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.LoadSoundEffects(System.String[])
  Jypeli.Game.LoadFont(System.String):
    name:
      CSharp:
      - id: Jypeli.Game.LoadFont(System.String)
        name: LoadFont
        nameWithType: Game.LoadFont
        qualifiedName: Jypeli.Game.LoadFont
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.LoadFont(System.String)
        name: LoadFont
        nameWithType: Game.LoadFont
        qualifiedName: Jypeli.Game.LoadFont
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.LoadFont(System.String)
  Jypeli.Game.ClearControls:
    name:
      CSharp:
      - id: Jypeli.Game.ClearControls
        name: ClearControls
        nameWithType: Game.ClearControls
        qualifiedName: Jypeli.Game.ClearControls
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.ClearControls
        name: ClearControls
        nameWithType: Game.ClearControls
        qualifiedName: Jypeli.Game.ClearControls
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.ClearControls
  Jypeli.Game.ShowControlHelp:
    name:
      CSharp:
      - id: Jypeli.Game.ShowControlHelp
        name: ShowControlHelp
        nameWithType: Game.ShowControlHelp
        qualifiedName: Jypeli.Game.ShowControlHelp
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.ShowControlHelp
        name: ShowControlHelp
        nameWithType: Game.ShowControlHelp
        qualifiedName: Jypeli.Game.ShowControlHelp
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.ShowControlHelp
  Jypeli.Game.ShowControlHelp(Jypeli.Controls.IController):
    name:
      CSharp:
      - id: Jypeli.Game.ShowControlHelp(Jypeli.Controls.IController)
        name: ShowControlHelp
        nameWithType: Game.ShowControlHelp
        qualifiedName: Jypeli.Game.ShowControlHelp
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Controls.IController
        name: IController
        nameWithType: IController
        qualifiedName: Jypeli.Controls.IController
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.ShowControlHelp(Jypeli.Controls.IController)
        name: ShowControlHelp
        nameWithType: Game.ShowControlHelp
        qualifiedName: Jypeli.Game.ShowControlHelp
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Controls.IController
        name: IController
        nameWithType: IController
        qualifiedName: Jypeli.Controls.IController
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.ShowControlHelp(Jypeli.Controls.IController)
  Jypeli.Game.AssertInitialized(System.Action):
    name:
      CSharp:
      - id: Jypeli.Game.AssertInitialized(System.Action)
        name: AssertInitialized
        nameWithType: Game.AssertInitialized
        qualifiedName: Jypeli.Game.AssertInitialized
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.AssertInitialized(System.Action)
        name: AssertInitialized
        nameWithType: Game.AssertInitialized
        qualifiedName: Jypeli.Game.AssertInitialized
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.AssertInitialized(System.Action)
  Jypeli.Game.DoNextUpdate(System.Action):
    name:
      CSharp:
      - id: Jypeli.Game.DoNextUpdate(System.Action)
        name: DoNextUpdate
        nameWithType: Game.DoNextUpdate
        qualifiedName: Jypeli.Game.DoNextUpdate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.DoNextUpdate(System.Action)
        name: DoNextUpdate
        nameWithType: Game.DoNextUpdate
        qualifiedName: Jypeli.Game.DoNextUpdate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.DoNextUpdate(System.Action)
  Jypeli.Game.DoNextUpdate``1(System.Action{``0},``0):
    name:
      CSharp:
      - id: Jypeli.Game.DoNextUpdate``1(System.Action{``0},``0)
        name: DoNextUpdate<T1>
        nameWithType: Game.DoNextUpdate<T1>
        qualifiedName: Jypeli.Game.DoNextUpdate<T1>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.DoNextUpdate``1(System.Action{``0},``0)
        name: DoNextUpdate(Of T1)
        nameWithType: Game.DoNextUpdate(Of T1)
        qualifiedName: Jypeli.Game.DoNextUpdate(Of T1)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Jypeli.Game.DoNextUpdate``1(System.Action{``0},``0)
  Jypeli.Game.DoNextUpdate``1(System.Action{{T1}},{T1}):
    name:
      CSharp:
      - id: Jypeli.Game.DoNextUpdate``1(System.Action{``0},``0)
        name: DoNextUpdate<T1>
        nameWithType: Game.DoNextUpdate<T1>
        qualifiedName: Jypeli.Game.DoNextUpdate<T1>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.DoNextUpdate``1(System.Action{``0},``0)
        name: DoNextUpdate(Of T1)
        nameWithType: Game.DoNextUpdate(Of T1)
        qualifiedName: Jypeli.Game.DoNextUpdate(Of T1)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Jypeli.Game.DoNextUpdate``1(System.Action{``0},``0)
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.DoNextUpdate``1(System.Action{``0},``0)
  Jypeli.Game.DoNextUpdate``2(System.Action{``0,``1},``0,``1):
    name:
      CSharp:
      - id: Jypeli.Game.DoNextUpdate``2(System.Action{``0,``1},``0,``1)
        name: DoNextUpdate<T1, T2>
        nameWithType: Game.DoNextUpdate<T1, T2>
        qualifiedName: Jypeli.Game.DoNextUpdate<T1, T2>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.DoNextUpdate``2(System.Action{``0,``1},``0,``1)
        name: DoNextUpdate(Of T1, T2)
        nameWithType: Game.DoNextUpdate(Of T1, T2)
        qualifiedName: Jypeli.Game.DoNextUpdate(Of T1, T2)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Jypeli.Game.DoNextUpdate``2(System.Action{``0,``1},``0,``1)
  Jypeli.Game.DoNextUpdate``2(System.Action{{T1},{T2}},{T1},{T2}):
    name:
      CSharp:
      - id: Jypeli.Game.DoNextUpdate``2(System.Action{``0,``1},``0,``1)
        name: DoNextUpdate<T1, T2>
        nameWithType: Game.DoNextUpdate<T1, T2>
        qualifiedName: Jypeli.Game.DoNextUpdate<T1, T2>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.DoNextUpdate``2(System.Action{``0,``1},``0,``1)
        name: DoNextUpdate(Of T1, T2)
        nameWithType: Game.DoNextUpdate(Of T1, T2)
        qualifiedName: Jypeli.Game.DoNextUpdate(Of T1, T2)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Jypeli.Game.DoNextUpdate``2(System.Action{``0,``1},``0,``1)
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.DoNextUpdate``2(System.Action{``0,``1},``0,``1)
  Jypeli.Game.AssertInitialized``1(System.Action{``0},``0):
    name:
      CSharp:
      - id: Jypeli.Game.AssertInitialized``1(System.Action{``0},``0)
        name: AssertInitialized<T1>
        nameWithType: Game.AssertInitialized<T1>
        qualifiedName: Jypeli.Game.AssertInitialized<T1>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.AssertInitialized``1(System.Action{``0},``0)
        name: AssertInitialized(Of T1)
        nameWithType: Game.AssertInitialized(Of T1)
        qualifiedName: Jypeli.Game.AssertInitialized(Of T1)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Jypeli.Game.AssertInitialized``1(System.Action{``0},``0)
  Jypeli.Game.AssertInitialized``1(System.Action{{T1}},{T1}):
    name:
      CSharp:
      - id: Jypeli.Game.AssertInitialized``1(System.Action{``0},``0)
        name: AssertInitialized<T1>
        nameWithType: Game.AssertInitialized<T1>
        qualifiedName: Jypeli.Game.AssertInitialized<T1>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.AssertInitialized``1(System.Action{``0},``0)
        name: AssertInitialized(Of T1)
        nameWithType: Game.AssertInitialized(Of T1)
        qualifiedName: Jypeli.Game.AssertInitialized(Of T1)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Jypeli.Game.AssertInitialized``1(System.Action{``0},``0)
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.AssertInitialized``1(System.Action{``0},``0)
  Jypeli.Game.ConfirmExit:
    name:
      CSharp:
      - id: Jypeli.Game.ConfirmExit
        name: ConfirmExit
        nameWithType: Game.ConfirmExit
        qualifiedName: Jypeli.Game.ConfirmExit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.ConfirmExit
        name: ConfirmExit
        nameWithType: Game.ConfirmExit
        qualifiedName: Jypeli.Game.ConfirmExit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.ConfirmExit
  Jypeli.Game.ConfirmExit(System.Action):
    name:
      CSharp:
      - id: Jypeli.Game.ConfirmExit(System.Action)
        name: ConfirmExit
        nameWithType: Game.ConfirmExit
        qualifiedName: Jypeli.Game.ConfirmExit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.ConfirmExit(System.Action)
        name: ConfirmExit
        nameWithType: Game.ConfirmExit
        qualifiedName: Jypeli.Game.ConfirmExit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.ConfirmExit(System.Action)
  Jypeli.Game.OnExiting(System.Object,System.EventArgs):
    name:
      CSharp:
      - id: Jypeli.Game.OnExiting(System.Object,System.EventArgs)
        name: OnExiting
        nameWithType: Game.OnExiting
        qualifiedName: Jypeli.Game.OnExiting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        qualifiedName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.OnExiting(System.Object,System.EventArgs)
        name: OnExiting
        nameWithType: Game.OnExiting
        qualifiedName: Jypeli.Game.OnExiting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        qualifiedName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.OnExiting(System.Object,System.EventArgs)
  Jypeli.Game.Add(Jypeli.Effects.Light):
    name:
      CSharp:
      - id: Jypeli.Game.Add(Jypeli.Effects.Light)
        name: Add
        nameWithType: Game.Add
        qualifiedName: Jypeli.Game.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Effects.Light
        name: Light
        nameWithType: Light
        qualifiedName: Jypeli.Effects.Light
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.Add(Jypeli.Effects.Light)
        name: Add
        nameWithType: Game.Add
        qualifiedName: Jypeli.Game.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Effects.Light
        name: Light
        nameWithType: Light
        qualifiedName: Jypeli.Effects.Light
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.Add(Jypeli.Effects.Light)
  Jypeli.Game.ClearLights:
    name:
      CSharp:
      - id: Jypeli.Game.ClearLights
        name: ClearLights
        nameWithType: Game.ClearLights
        qualifiedName: Jypeli.Game.ClearLights
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.ClearLights
        name: ClearLights
        nameWithType: Game.ClearLights
        qualifiedName: Jypeli.Game.ClearLights
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.ClearLights
  Jypeli.Game.AddCustomHandler(System.Func{System.Boolean},System.Action):
    name:
      CSharp:
      - id: Jypeli.Game.AddCustomHandler(System.Func{System.Boolean},System.Action)
        name: AddCustomHandler
        nameWithType: Game.AddCustomHandler
        qualifiedName: Jypeli.Game.AddCustomHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.AddCustomHandler(System.Func{System.Boolean},System.Action)
        name: AddCustomHandler
        nameWithType: Game.AddCustomHandler
        qualifiedName: Jypeli.Game.AddCustomHandler
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.AddCustomHandler(System.Func{System.Boolean},System.Action)
  Jypeli.Game.AddCustomHandler``1(``0,System.Predicate{``0},System.Action{``0}):
    name:
      CSharp:
      - id: Jypeli.Game.AddCustomHandler``1(``0,System.Predicate{``0},System.Action{``0})
        name: AddCustomHandler<T>
        nameWithType: Game.AddCustomHandler<T>
        qualifiedName: Jypeli.Game.AddCustomHandler<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: System.Predicate
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.AddCustomHandler``1(``0,System.Predicate{``0},System.Action{``0})
        name: AddCustomHandler(Of T)
        nameWithType: Game.AddCustomHandler(Of T)
        qualifiedName: Jypeli.Game.AddCustomHandler(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: System.Predicate
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Jypeli.Game.AddCustomHandler``1(``0,System.Predicate{``0},System.Action{``0})
  Jypeli.Game.AddCustomHandler``1({T},System.Predicate{{T}},System.Action{{T}}):
    name:
      CSharp:
      - id: Jypeli.Game.AddCustomHandler``1(``0,System.Predicate{``0},System.Action{``0})
        name: AddCustomHandler<T>
        nameWithType: Game.AddCustomHandler<T>
        qualifiedName: Jypeli.Game.AddCustomHandler<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: System.Predicate
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.AddCustomHandler``1(``0,System.Predicate{``0},System.Action{``0})
        name: AddCustomHandler(Of T)
        nameWithType: Game.AddCustomHandler(Of T)
        qualifiedName: Jypeli.Game.AddCustomHandler(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: System.Predicate
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Jypeli.Game.AddCustomHandler``1(``0,System.Predicate{``0},System.Action{``0})
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.AddCustomHandler``1(``0,System.Predicate{``0},System.Action{``0})
  Jypeli.Game.AddCustomHandler``2(``0,``1,System.Func{``0,``1,System.Boolean},System.Action{``0,``1}):
    name:
      CSharp:
      - id: Jypeli.Game.AddCustomHandler``2(``0,``1,System.Func{``0,``1,System.Boolean},System.Action{``0,``1})
        name: AddCustomHandler<T1, T2>
        nameWithType: Game.AddCustomHandler<T1, T2>
        qualifiedName: Jypeli.Game.AddCustomHandler<T1, T2>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.AddCustomHandler``2(``0,``1,System.Func{``0,``1,System.Boolean},System.Action{``0,``1})
        name: AddCustomHandler(Of T1, T2)
        nameWithType: Game.AddCustomHandler(Of T1, T2)
        qualifiedName: Jypeli.Game.AddCustomHandler(Of T1, T2)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Jypeli.Game.AddCustomHandler``2(``0,``1,System.Func{``0,``1,System.Boolean},System.Action{``0,``1})
  Jypeli.Game.AddCustomHandler``2({T1},{T2},System.Func{{T1},{T2},System.Boolean},System.Action{{T1},{T2}}):
    name:
      CSharp:
      - id: Jypeli.Game.AddCustomHandler``2(``0,``1,System.Func{``0,``1,System.Boolean},System.Action{``0,``1})
        name: AddCustomHandler<T1, T2>
        nameWithType: Game.AddCustomHandler<T1, T2>
        qualifiedName: Jypeli.Game.AddCustomHandler<T1, T2>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.AddCustomHandler``2(``0,``1,System.Func{``0,``1,System.Boolean},System.Action{``0,``1})
        name: AddCustomHandler(Of T1, T2)
        nameWithType: Game.AddCustomHandler(Of T1, T2)
        qualifiedName: Jypeli.Game.AddCustomHandler(Of T1, T2)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Jypeli.Game.AddCustomHandler``2(``0,``1,System.Func{``0,``1,System.Boolean},System.Action{``0,``1})
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.AddCustomHandler``2(``0,``1,System.Func{``0,``1,System.Boolean},System.Action{``0,``1})
  Jypeli.Game.AddCustomHandler``3(``0,``1,``2,System.Func{``0,``1,``2,System.Boolean},System.Action{``0,``1,``2}):
    name:
      CSharp:
      - id: Jypeli.Game.AddCustomHandler``3(``0,``1,``2,System.Func{``0,``1,``2,System.Boolean},System.Action{``0,``1,``2})
        name: AddCustomHandler<T1, T2, T3>
        nameWithType: Game.AddCustomHandler<T1, T2, T3>
        qualifiedName: Jypeli.Game.AddCustomHandler<T1, T2, T3>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T3
        nameWithType: T3
        qualifiedName: T3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`4
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T3
        nameWithType: T3
        qualifiedName: T3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action`3
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T3
        nameWithType: T3
        qualifiedName: T3
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.AddCustomHandler``3(``0,``1,``2,System.Func{``0,``1,``2,System.Boolean},System.Action{``0,``1,``2})
        name: AddCustomHandler(Of T1, T2, T3)
        nameWithType: Game.AddCustomHandler(Of T1, T2, T3)
        qualifiedName: Jypeli.Game.AddCustomHandler(Of T1, T2, T3)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T3
        nameWithType: T3
        qualifiedName: T3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`4
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T3
        nameWithType: T3
        qualifiedName: T3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action`3
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T3
        nameWithType: T3
        qualifiedName: T3
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Jypeli.Game.AddCustomHandler``3(``0,``1,``2,System.Func{``0,``1,``2,System.Boolean},System.Action{``0,``1,``2})
  Jypeli.Game.AddCustomHandler``3({T1},{T2},{T3},System.Func{{T1},{T2},{T3},System.Boolean},System.Action{{T1},{T2},{T3}}):
    name:
      CSharp:
      - id: Jypeli.Game.AddCustomHandler``3(``0,``1,``2,System.Func{``0,``1,``2,System.Boolean},System.Action{``0,``1,``2})
        name: AddCustomHandler<T1, T2, T3>
        nameWithType: Game.AddCustomHandler<T1, T2, T3>
        qualifiedName: Jypeli.Game.AddCustomHandler<T1, T2, T3>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T3
        nameWithType: T3
        qualifiedName: T3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`4
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T3
        nameWithType: T3
        qualifiedName: T3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action`3
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T3
        nameWithType: T3
        qualifiedName: T3
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.AddCustomHandler``3(``0,``1,``2,System.Func{``0,``1,``2,System.Boolean},System.Action{``0,``1,``2})
        name: AddCustomHandler(Of T1, T2, T3)
        nameWithType: Game.AddCustomHandler(Of T1, T2, T3)
        qualifiedName: Jypeli.Game.AddCustomHandler(Of T1, T2, T3)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T3
        nameWithType: T3
        qualifiedName: T3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Func`4
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T3
        nameWithType: T3
        qualifiedName: T3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Action`3
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T3
        nameWithType: T3
        qualifiedName: T3
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Jypeli.Game.AddCustomHandler``3(``0,``1,``2,System.Func{``0,``1,``2,System.Boolean},System.Action{``0,``1,``2})
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.AddCustomHandler``3(``0,``1,``2,System.Func{``0,``1,``2,System.Boolean},System.Action{``0,``1,``2})
  Jypeli.Game.UpdateHandlers(Jypeli.Time):
    name:
      CSharp:
      - id: Jypeli.Game.UpdateHandlers(Jypeli.Time)
        name: UpdateHandlers
        nameWithType: Game.UpdateHandlers
        qualifiedName: Jypeli.Game.UpdateHandlers
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Time
        name: Time
        nameWithType: Time
        qualifiedName: Jypeli.Time
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.UpdateHandlers(Jypeli.Time)
        name: UpdateHandlers
        nameWithType: Game.UpdateHandlers
        qualifiedName: Jypeli.Game.UpdateHandlers
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Time
        name: Time
        nameWithType: Time
        qualifiedName: Jypeli.Time
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.UpdateHandlers(Jypeli.Time)
  Jypeli.Game.AddFactory``1(System.String,Jypeli.Factory.FactoryMethod):
    name:
      CSharp:
      - id: Jypeli.Game.AddFactory``1(System.String,Jypeli.Factory.FactoryMethod)
        name: AddFactory<T>
        nameWithType: Game.AddFactory<T>
        qualifiedName: Jypeli.Game.AddFactory<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.Factory.FactoryMethod
        name: Factory.FactoryMethod
        nameWithType: Factory.FactoryMethod
        qualifiedName: Jypeli.Factory.FactoryMethod
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.AddFactory``1(System.String,Jypeli.Factory.FactoryMethod)
        name: AddFactory(Of T)
        nameWithType: Game.AddFactory(Of T)
        qualifiedName: Jypeli.Game.AddFactory(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.Factory.FactoryMethod
        name: Factory.FactoryMethod
        nameWithType: Factory.FactoryMethod
        qualifiedName: Jypeli.Factory.FactoryMethod
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.AddFactory``1(System.String,Jypeli.Factory.FactoryMethod)
  Jypeli.Game.RemoveFactory``1(System.String,Jypeli.Factory.FactoryMethod):
    name:
      CSharp:
      - id: Jypeli.Game.RemoveFactory``1(System.String,Jypeli.Factory.FactoryMethod)
        name: RemoveFactory<T>
        nameWithType: Game.RemoveFactory<T>
        qualifiedName: Jypeli.Game.RemoveFactory<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.Factory.FactoryMethod
        name: Factory.FactoryMethod
        nameWithType: Factory.FactoryMethod
        qualifiedName: Jypeli.Factory.FactoryMethod
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.RemoveFactory``1(System.String,Jypeli.Factory.FactoryMethod)
        name: RemoveFactory(Of T)
        nameWithType: Game.RemoveFactory(Of T)
        qualifiedName: Jypeli.Game.RemoveFactory(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.Factory.FactoryMethod
        name: Factory.FactoryMethod
        nameWithType: Factory.FactoryMethod
        qualifiedName: Jypeli.Factory.FactoryMethod
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.RemoveFactory``1(System.String,Jypeli.Factory.FactoryMethod)
  Jypeli.Game.FactoryCreate``1(System.String):
    name:
      CSharp:
      - id: Jypeli.Game.FactoryCreate``1(System.String)
        name: FactoryCreate<T>
        nameWithType: Game.FactoryCreate<T>
        qualifiedName: Jypeli.Game.FactoryCreate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.FactoryCreate``1(System.String)
        name: FactoryCreate(Of T)
        nameWithType: Game.FactoryCreate(Of T)
        qualifiedName: Jypeli.Game.FactoryCreate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.FactoryCreate``1(System.String)
  Jypeli.Game.Run(System.Boolean,System.Boolean,System.Int32,System.Int32):
    name:
      CSharp:
      - id: Jypeli.Game.Run(System.Boolean,System.Boolean,System.Int32,System.Int32)
        name: Run
        nameWithType: Game.Run
        qualifiedName: Jypeli.Game.Run
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.Run(System.Boolean,System.Boolean,System.Int32,System.Int32)
        name: Run
        nameWithType: Game.Run
        qualifiedName: Jypeli.Game.Run
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.Run(System.Boolean,System.Boolean,System.Int32,System.Int32)
  Jypeli.Game.RunOneFrame(System.String):
    name:
      CSharp:
      - id: Jypeli.Game.RunOneFrame(System.String)
        name: RunOneFrame
        nameWithType: Game.RunOneFrame
        qualifiedName: Jypeli.Game.RunOneFrame
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.RunOneFrame(System.String)
        name: RunOneFrame
        nameWithType: Game.RunOneFrame
        qualifiedName: Jypeli.Game.RunOneFrame
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.RunOneFrame(System.String)
  Jypeli.Game.Initialize:
    name:
      CSharp:
      - id: Jypeli.Game.Initialize
        name: Initialize
        nameWithType: Game.Initialize
        qualifiedName: Jypeli.Game.Initialize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.Initialize
        name: Initialize
        nameWithType: Game.Initialize
        qualifiedName: Jypeli.Game.Initialize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.Initialize
  Jypeli.Game.Paint(Jypeli.Canvas):
    name:
      CSharp:
      - id: Jypeli.Game.Paint(Jypeli.Canvas)
        name: Paint
        nameWithType: Game.Paint
        qualifiedName: Jypeli.Game.Paint
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Canvas
        name: Canvas
        nameWithType: Canvas
        qualifiedName: Jypeli.Canvas
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.Paint(Jypeli.Canvas)
        name: Paint
        nameWithType: Game.Paint
        qualifiedName: Jypeli.Game.Paint
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Canvas
        name: Canvas
        nameWithType: Canvas
        qualifiedName: Jypeli.Canvas
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.Paint(Jypeli.Canvas)
  Jypeli.Game.OnExit:
    name:
      CSharp:
      - id: Jypeli.Game.OnExit
        name: OnExit
        nameWithType: Game.OnExit
        qualifiedName: Jypeli.Game.OnExit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.OnExit
        name: OnExit
        nameWithType: Game.OnExit
        qualifiedName: Jypeli.Game.OnExit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.OnExit
  Jypeli.Game.Exit:
    name:
      CSharp:
      - id: Jypeli.Game.Exit
        name: Exit
        nameWithType: Game.Exit
        qualifiedName: Jypeli.Game.Exit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.Exit
        name: Exit
        nameWithType: Game.Exit
        qualifiedName: Jypeli.Game.Exit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.Exit
  Jypeli.Game.Dispose:
    name:
      CSharp:
      - id: Jypeli.Game.Dispose
        name: Dispose
        nameWithType: Game.Dispose
        qualifiedName: Jypeli.Game.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.Dispose
        name: Dispose
        nameWithType: Game.Dispose
        qualifiedName: Jypeli.Game.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.Dispose
  Jypeli.Game.SetWindowPosition(System.Int32,System.Int32):
    name:
      CSharp:
      - id: Jypeli.Game.SetWindowPosition(System.Int32,System.Int32)
        name: SetWindowPosition
        nameWithType: Game.SetWindowPosition
        qualifiedName: Jypeli.Game.SetWindowPosition
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.SetWindowPosition(System.Int32,System.Int32)
        name: SetWindowPosition
        nameWithType: Game.SetWindowPosition
        qualifiedName: Jypeli.Game.SetWindowPosition
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.SetWindowPosition(System.Int32,System.Int32)
  Jypeli.Game.CenterWindow:
    name:
      CSharp:
      - id: Jypeli.Game.CenterWindow
        name: CenterWindow
        nameWithType: Game.CenterWindow
        qualifiedName: Jypeli.Game.CenterWindow
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.CenterWindow
        name: CenterWindow
        nameWithType: Game.CenterWindow
        qualifiedName: Jypeli.Game.CenterWindow
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.CenterWindow
  Jypeli.Game.SetWindowSize(System.Int32,System.Int32):
    name:
      CSharp:
      - id: Jypeli.Game.SetWindowSize(System.Int32,System.Int32)
        name: SetWindowSize
        nameWithType: Game.SetWindowSize
        qualifiedName: Jypeli.Game.SetWindowSize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.SetWindowSize(System.Int32,System.Int32)
        name: SetWindowSize
        nameWithType: Game.SetWindowSize
        qualifiedName: Jypeli.Game.SetWindowSize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.SetWindowSize(System.Int32,System.Int32)
  Jypeli.Game.SetWindowSize(System.Int32,System.Int32,System.Boolean):
    name:
      CSharp:
      - id: Jypeli.Game.SetWindowSize(System.Int32,System.Int32,System.Boolean)
        name: SetWindowSize
        nameWithType: Game.SetWindowSize
        qualifiedName: Jypeli.Game.SetWindowSize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.SetWindowSize(System.Int32,System.Int32,System.Boolean)
        name: SetWindowSize
        nameWithType: Game.SetWindowSize
        qualifiedName: Jypeli.Game.SetWindowSize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.SetWindowSize(System.Int32,System.Int32,System.Boolean)
  Jypeli.Game.Add(Jypeli.IGameObject):
    name:
      CSharp:
      - id: Jypeli.Game.Add(Jypeli.IGameObject)
        name: Add
        nameWithType: Game.Add
        qualifiedName: Jypeli.Game.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IGameObject
        name: IGameObject
        nameWithType: IGameObject
        qualifiedName: Jypeli.IGameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.Add(Jypeli.IGameObject)
        name: Add
        nameWithType: Game.Add
        qualifiedName: Jypeli.Game.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IGameObject
        name: IGameObject
        nameWithType: IGameObject
        qualifiedName: Jypeli.IGameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.Add(Jypeli.IGameObject)
  Jypeli.Game.Add(Jypeli.IGameObject,System.Int32):
    name:
      CSharp:
      - id: Jypeli.Game.Add(Jypeli.IGameObject,System.Int32)
        name: Add
        nameWithType: Game.Add
        qualifiedName: Jypeli.Game.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IGameObject
        name: IGameObject
        nameWithType: IGameObject
        qualifiedName: Jypeli.IGameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.Add(Jypeli.IGameObject,System.Int32)
        name: Add
        nameWithType: Game.Add
        qualifiedName: Jypeli.Game.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IGameObject
        name: IGameObject
        nameWithType: IGameObject
        qualifiedName: Jypeli.IGameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.Add(Jypeli.IGameObject,System.Int32)
  Jypeli.Game.Add(Jypeli.Layer):
    name:
      CSharp:
      - id: Jypeli.Game.Add(Jypeli.Layer)
        name: Add
        nameWithType: Game.Add
        qualifiedName: Jypeli.Game.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Jypeli.Layer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.Add(Jypeli.Layer)
        name: Add
        nameWithType: Game.Add
        qualifiedName: Jypeli.Game.Add
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Jypeli.Layer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.Add(Jypeli.Layer)
  Jypeli.Game.Remove(Jypeli.IGameObject):
    name:
      CSharp:
      - id: Jypeli.Game.Remove(Jypeli.IGameObject)
        name: Remove
        nameWithType: Game.Remove
        qualifiedName: Jypeli.Game.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IGameObject
        name: IGameObject
        nameWithType: IGameObject
        qualifiedName: Jypeli.IGameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.Remove(Jypeli.IGameObject)
        name: Remove
        nameWithType: Game.Remove
        qualifiedName: Jypeli.Game.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.IGameObject
        name: IGameObject
        nameWithType: IGameObject
        qualifiedName: Jypeli.IGameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.Remove(Jypeli.IGameObject)
  Jypeli.Game.Remove(Jypeli.Layer):
    name:
      CSharp:
      - id: Jypeli.Game.Remove(Jypeli.Layer)
        name: Remove
        nameWithType: Game.Remove
        qualifiedName: Jypeli.Game.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Jypeli.Layer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.Remove(Jypeli.Layer)
        name: Remove
        nameWithType: Game.Remove
        qualifiedName: Jypeli.Game.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Jypeli.Layer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.Remove(Jypeli.Layer)
  Jypeli.Game.Remove(Jypeli.Effects.Light):
    name:
      CSharp:
      - id: Jypeli.Game.Remove(Jypeli.Effects.Light)
        name: Remove
        nameWithType: Game.Remove
        qualifiedName: Jypeli.Game.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Effects.Light
        name: Light
        nameWithType: Light
        qualifiedName: Jypeli.Effects.Light
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.Remove(Jypeli.Effects.Light)
        name: Remove
        nameWithType: Game.Remove
        qualifiedName: Jypeli.Game.Remove
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Effects.Light
        name: Light
        nameWithType: Light
        qualifiedName: Jypeli.Effects.Light
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.Remove(Jypeli.Effects.Light)
  Jypeli.Game.ClearGameObjects:
    name:
      CSharp:
      - id: Jypeli.Game.ClearGameObjects
        name: ClearGameObjects
        nameWithType: Game.ClearGameObjects
        qualifiedName: Jypeli.Game.ClearGameObjects
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.ClearGameObjects
        name: ClearGameObjects
        nameWithType: Game.ClearGameObjects
        qualifiedName: Jypeli.Game.ClearGameObjects
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.ClearGameObjects
  Jypeli.Game.ResetLayers:
    name:
      CSharp:
      - id: Jypeli.Game.ResetLayers
        name: ResetLayers
        nameWithType: Game.ResetLayers
        qualifiedName: Jypeli.Game.ResetLayers
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.ResetLayers
        name: ResetLayers
        nameWithType: Game.ResetLayers
        qualifiedName: Jypeli.Game.ResetLayers
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.ResetLayers
  Jypeli.Game.RemoveAllLayers:
    name:
      CSharp:
      - id: Jypeli.Game.RemoveAllLayers
        name: RemoveAllLayers
        nameWithType: Game.RemoveAllLayers
        qualifiedName: Jypeli.Game.RemoveAllLayers
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.RemoveAllLayers
        name: RemoveAllLayers
        nameWithType: Game.RemoveAllLayers
        qualifiedName: Jypeli.Game.RemoveAllLayers
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.RemoveAllLayers
  Jypeli.Game.GetObjects(System.Predicate{Jypeli.GameObject}):
    name:
      CSharp:
      - id: Jypeli.Game.GetObjects(System.Predicate{Jypeli.GameObject})
        name: GetObjects
        nameWithType: Game.GetObjects
        qualifiedName: Jypeli.Game.GetObjects
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: System.Predicate
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Jypeli.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: Jypeli.GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetObjects(System.Predicate{Jypeli.GameObject})
        name: GetObjects
        nameWithType: Game.GetObjects
        qualifiedName: Jypeli.Game.GetObjects
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: System.Predicate
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Jypeli.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: Jypeli.GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetObjects(System.Predicate{Jypeli.GameObject})
  Jypeli.Game.GetAllObjects:
    name:
      CSharp:
      - id: Jypeli.Game.GetAllObjects
        name: GetAllObjects
        nameWithType: Game.GetAllObjects
        qualifiedName: Jypeli.Game.GetAllObjects
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetAllObjects
        name: GetAllObjects
        nameWithType: Game.GetAllObjects
        qualifiedName: Jypeli.Game.GetAllObjects
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetAllObjects
  Jypeli.Game.GetObjectsWithTag(System.String[]):
    name:
      CSharp:
      - id: Jypeli.Game.GetObjectsWithTag(System.String[])
        name: GetObjectsWithTag
        nameWithType: Game.GetObjectsWithTag
        qualifiedName: Jypeli.Game.GetObjectsWithTag
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetObjectsWithTag(System.String[])
        name: GetObjectsWithTag
        nameWithType: Game.GetObjectsWithTag
        qualifiedName: Jypeli.Game.GetObjectsWithTag
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetObjectsWithTag(System.String[])
  Jypeli.Game.GetObjectsWithTag(System.Object[]):
    name:
      CSharp:
      - id: Jypeli.Game.GetObjectsWithTag(System.Object[])
        name: GetObjectsWithTag
        nameWithType: Game.GetObjectsWithTag
        qualifiedName: Jypeli.Game.GetObjectsWithTag
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetObjectsWithTag(System.Object[])
        name: GetObjectsWithTag
        nameWithType: Game.GetObjectsWithTag
        qualifiedName: Jypeli.Game.GetObjectsWithTag
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetObjectsWithTag(System.Object[])
  Jypeli.Game.GetFirstObject(System.Predicate{Jypeli.GameObject}):
    name:
      CSharp:
      - id: Jypeli.Game.GetFirstObject(System.Predicate{Jypeli.GameObject})
        name: GetFirstObject
        nameWithType: Game.GetFirstObject
        qualifiedName: Jypeli.Game.GetFirstObject
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: System.Predicate
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Jypeli.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: Jypeli.GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetFirstObject(System.Predicate{Jypeli.GameObject})
        name: GetFirstObject
        nameWithType: Game.GetFirstObject
        qualifiedName: Jypeli.Game.GetFirstObject
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: System.Predicate
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Jypeli.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: Jypeli.GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetFirstObject(System.Predicate{Jypeli.GameObject})
  Jypeli.Game.GetObjectsAt(Jypeli.Vector):
    name:
      CSharp:
      - id: Jypeli.Game.GetObjectsAt(Jypeli.Vector)
        name: GetObjectsAt
        nameWithType: Game.GetObjectsAt
        qualifiedName: Jypeli.Game.GetObjectsAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetObjectsAt(Jypeli.Vector)
        name: GetObjectsAt
        nameWithType: Game.GetObjectsAt
        qualifiedName: Jypeli.Game.GetObjectsAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetObjectsAt(Jypeli.Vector)
  Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Double):
    name:
      CSharp:
      - id: Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Double)
        name: GetObjectsAt
        nameWithType: Game.GetObjectsAt
        qualifiedName: Jypeli.Game.GetObjectsAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Double)
        name: GetObjectsAt
        nameWithType: Game.GetObjectsAt
        qualifiedName: Jypeli.Game.GetObjectsAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Double)
  Jypeli.Game.GetObjectAt(Jypeli.Vector):
    name:
      CSharp:
      - id: Jypeli.Game.GetObjectAt(Jypeli.Vector)
        name: GetObjectAt
        nameWithType: Game.GetObjectAt
        qualifiedName: Jypeli.Game.GetObjectAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetObjectAt(Jypeli.Vector)
        name: GetObjectAt
        nameWithType: Game.GetObjectAt
        qualifiedName: Jypeli.Game.GetObjectAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetObjectAt(Jypeli.Vector)
  Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Double):
    name:
      CSharp:
      - id: Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Double)
        name: GetObjectAt
        nameWithType: Game.GetObjectAt
        qualifiedName: Jypeli.Game.GetObjectAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Double)
        name: GetObjectAt
        nameWithType: Game.GetObjectAt
        qualifiedName: Jypeli.Game.GetObjectAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Double)
  Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Object):
    name:
      CSharp:
      - id: Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Object)
        name: GetObjectsAt
        nameWithType: Game.GetObjectsAt
        qualifiedName: Jypeli.Game.GetObjectsAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Object)
        name: GetObjectsAt
        nameWithType: Game.GetObjectsAt
        qualifiedName: Jypeli.Game.GetObjectsAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Object)
  Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Object):
    name:
      CSharp:
      - id: Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Object)
        name: GetObjectAt
        nameWithType: Game.GetObjectAt
        qualifiedName: Jypeli.Game.GetObjectAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Object)
        name: GetObjectAt
        nameWithType: Game.GetObjectAt
        qualifiedName: Jypeli.Game.GetObjectAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Object)
  Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Object,System.Double):
    name:
      CSharp:
      - id: Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Object,System.Double)
        name: GetObjectsAt
        nameWithType: Game.GetObjectsAt
        qualifiedName: Jypeli.Game.GetObjectsAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Object,System.Double)
        name: GetObjectsAt
        nameWithType: Game.GetObjectsAt
        qualifiedName: Jypeli.Game.GetObjectsAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetObjectsAt(Jypeli.Vector,System.Object,System.Double)
  Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Object,System.Double):
    name:
      CSharp:
      - id: Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Object,System.Double)
        name: GetObjectAt
        nameWithType: Game.GetObjectAt
        qualifiedName: Jypeli.Game.GetObjectAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Object,System.Double)
        name: GetObjectAt
        nameWithType: Game.GetObjectAt
        qualifiedName: Jypeli.Game.GetObjectAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetObjectAt(Jypeli.Vector,System.Object,System.Double)
  Jypeli.Game.GetObjectsBetween(Jypeli.Vector,Jypeli.Vector):
    name:
      CSharp:
      - id: Jypeli.Game.GetObjectsBetween(Jypeli.Vector,Jypeli.Vector)
        name: GetObjectsBetween
        nameWithType: Game.GetObjectsBetween
        qualifiedName: Jypeli.Game.GetObjectsBetween
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetObjectsBetween(Jypeli.Vector,Jypeli.Vector)
        name: GetObjectsBetween
        nameWithType: Game.GetObjectsBetween
        qualifiedName: Jypeli.Game.GetObjectsBetween
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetObjectsBetween(Jypeli.Vector,Jypeli.Vector)
  Jypeli.Game.GetFirstWidget(System.Predicate{Jypeli.Widget}):
    name:
      CSharp:
      - id: Jypeli.Game.GetFirstWidget(System.Predicate{Jypeli.Widget})
        name: GetFirstWidget
        nameWithType: Game.GetFirstWidget
        qualifiedName: Jypeli.Game.GetFirstWidget
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: System.Predicate
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Jypeli.Widget
        name: Widget
        nameWithType: Widget
        qualifiedName: Jypeli.Widget
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetFirstWidget(System.Predicate{Jypeli.Widget})
        name: GetFirstWidget
        nameWithType: Game.GetFirstWidget
        qualifiedName: Jypeli.Game.GetFirstWidget
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: System.Predicate
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Jypeli.Widget
        name: Widget
        nameWithType: Widget
        qualifiedName: Jypeli.Widget
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetFirstWidget(System.Predicate{Jypeli.Widget})
  Jypeli.Game.GetWidgetAt(Jypeli.Vector):
    name:
      CSharp:
      - id: Jypeli.Game.GetWidgetAt(Jypeli.Vector)
        name: GetWidgetAt
        nameWithType: Game.GetWidgetAt
        qualifiedName: Jypeli.Game.GetWidgetAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.GetWidgetAt(Jypeli.Vector)
        name: GetWidgetAt
        nameWithType: Game.GetWidgetAt
        qualifiedName: Jypeli.Game.GetWidgetAt
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Jypeli.Vector
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.GetWidgetAt(Jypeli.Vector)
  Jypeli.Game.Pause:
    name:
      CSharp:
      - id: Jypeli.Game.Pause
        name: Pause
        nameWithType: Game.Pause
        qualifiedName: Jypeli.Game.Pause
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.Pause
        name: Pause
        nameWithType: Game.Pause
        qualifiedName: Jypeli.Game.Pause
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.Pause
  Jypeli.Game.ClearTimers:
    name:
      CSharp:
      - id: Jypeli.Game.ClearTimers
        name: ClearTimers
        nameWithType: Game.ClearTimers
        qualifiedName: Jypeli.Game.ClearTimers
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.ClearTimers
        name: ClearTimers
        nameWithType: Game.ClearTimers
        qualifiedName: Jypeli.Game.ClearTimers
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.ClearTimers
  Jypeli.Game.PausedUpdate(Jypeli.Time):
    name:
      CSharp:
      - id: Jypeli.Game.PausedUpdate(Jypeli.Time)
        name: PausedUpdate
        nameWithType: Game.PausedUpdate
        qualifiedName: Jypeli.Game.PausedUpdate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Time
        name: Time
        nameWithType: Time
        qualifiedName: Jypeli.Time
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.PausedUpdate(Jypeli.Time)
        name: PausedUpdate
        nameWithType: Game.PausedUpdate
        qualifiedName: Jypeli.Game.PausedUpdate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Jypeli.Time
        name: Time
        nameWithType: Time
        qualifiedName: Jypeli.Time
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.PausedUpdate(Jypeli.Time)
  Jypeli.Game.OnUpdate(System.Double):
    name:
      CSharp:
      - id: Jypeli.Game.OnUpdate(System.Double)
        name: OnUpdate
        nameWithType: Game.OnUpdate
        qualifiedName: Jypeli.Game.OnUpdate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.OnUpdate(System.Double)
        name: OnUpdate
        nameWithType: Game.OnUpdate
        qualifiedName: Jypeli.Game.OnUpdate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.OnUpdate(System.Double)
  Jypeli.Game.OnDraw(System.Double):
    name:
      CSharp:
      - id: Jypeli.Game.OnDraw(System.Double)
        name: OnDraw
        nameWithType: Game.OnDraw
        qualifiedName: Jypeli.Game.OnDraw
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.OnDraw(System.Double)
        name: OnDraw
        nameWithType: Game.OnDraw
        qualifiedName: Jypeli.Game.OnDraw
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.OnDraw(System.Double)
  Jypeli.Game.MediaPlayer:
    name:
      CSharp:
      - id: Jypeli.Game.MediaPlayer
        name: MediaPlayer
        nameWithType: Game.MediaPlayer
        qualifiedName: Jypeli.Game.MediaPlayer
        isExternal: true
      VB:
      - id: Jypeli.Game.MediaPlayer
        name: MediaPlayer
        nameWithType: Game.MediaPlayer
        qualifiedName: Jypeli.Game.MediaPlayer
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.MediaPlayer
  Jypeli.Game.MasterVolume:
    name:
      CSharp:
      - id: Jypeli.Game.MasterVolume
        name: MasterVolume
        nameWithType: Game.MasterVolume
        qualifiedName: Jypeli.Game.MasterVolume
        isExternal: true
      VB:
      - id: Jypeli.Game.MasterVolume
        name: MasterVolume
        nameWithType: Game.MasterVolume
        qualifiedName: Jypeli.Game.MasterVolume
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.MasterVolume
  Jypeli.Game.ResourceContent:
    name:
      CSharp:
      - id: Jypeli.Game.ResourceContent
        name: ResourceContent
        nameWithType: Game.ResourceContent
        qualifiedName: Jypeli.Game.ResourceContent
        isExternal: true
      VB:
      - id: Jypeli.Game.ResourceContent
        name: ResourceContent
        nameWithType: Game.ResourceContent
        qualifiedName: Jypeli.Game.ResourceContent
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.ResourceContent
  Jypeli.Game.Keyboard:
    name:
      CSharp:
      - id: Jypeli.Game.Keyboard
        name: Keyboard
        nameWithType: Game.Keyboard
        qualifiedName: Jypeli.Game.Keyboard
        isExternal: true
      VB:
      - id: Jypeli.Game.Keyboard
        name: Keyboard
        nameWithType: Game.Keyboard
        qualifiedName: Jypeli.Game.Keyboard
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.Keyboard
  Jypeli.Game.Mouse:
    name:
      CSharp:
      - id: Jypeli.Game.Mouse
        name: Mouse
        nameWithType: Game.Mouse
        qualifiedName: Jypeli.Game.Mouse
        isExternal: true
      VB:
      - id: Jypeli.Game.Mouse
        name: Mouse
        nameWithType: Game.Mouse
        qualifiedName: Jypeli.Game.Mouse
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.Mouse
  Jypeli.Game.Accelerometer:
    name:
      CSharp:
      - id: Jypeli.Game.Accelerometer
        name: Accelerometer
        nameWithType: Game.Accelerometer
        qualifiedName: Jypeli.Game.Accelerometer
        isExternal: true
      VB:
      - id: Jypeli.Game.Accelerometer
        name: Accelerometer
        nameWithType: Game.Accelerometer
        qualifiedName: Jypeli.Game.Accelerometer
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.Accelerometer
  Jypeli.Game.TouchPanel:
    name:
      CSharp:
      - id: Jypeli.Game.TouchPanel
        name: TouchPanel
        nameWithType: Game.TouchPanel
        qualifiedName: Jypeli.Game.TouchPanel
        isExternal: true
      VB:
      - id: Jypeli.Game.TouchPanel
        name: TouchPanel
        nameWithType: Game.TouchPanel
        qualifiedName: Jypeli.Game.TouchPanel
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.TouchPanel
  Jypeli.Game.PhoneBackButton:
    name:
      CSharp:
      - id: Jypeli.Game.PhoneBackButton
        name: PhoneBackButton
        nameWithType: Game.PhoneBackButton
        qualifiedName: Jypeli.Game.PhoneBackButton
        isExternal: true
      VB:
      - id: Jypeli.Game.PhoneBackButton
        name: PhoneBackButton
        nameWithType: Game.PhoneBackButton
        qualifiedName: Jypeli.Game.PhoneBackButton
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.PhoneBackButton
  Jypeli.Game.GameControllers:
    name:
      CSharp:
      - id: Jypeli.Game.GameControllers
        name: GameControllers
        nameWithType: Game.GameControllers
        qualifiedName: Jypeli.Game.GameControllers
        isExternal: true
      VB:
      - id: Jypeli.Game.GameControllers
        name: GameControllers
        nameWithType: Game.GameControllers
        qualifiedName: Jypeli.Game.GameControllers
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.GameControllers
  Jypeli.Game.ControllerOne:
    name:
      CSharp:
      - id: Jypeli.Game.ControllerOne
        name: ControllerOne
        nameWithType: Game.ControllerOne
        qualifiedName: Jypeli.Game.ControllerOne
        isExternal: true
      VB:
      - id: Jypeli.Game.ControllerOne
        name: ControllerOne
        nameWithType: Game.ControllerOne
        qualifiedName: Jypeli.Game.ControllerOne
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.ControllerOne
  Jypeli.Game.ControllerTwo:
    name:
      CSharp:
      - id: Jypeli.Game.ControllerTwo
        name: ControllerTwo
        nameWithType: Game.ControllerTwo
        qualifiedName: Jypeli.Game.ControllerTwo
        isExternal: true
      VB:
      - id: Jypeli.Game.ControllerTwo
        name: ControllerTwo
        nameWithType: Game.ControllerTwo
        qualifiedName: Jypeli.Game.ControllerTwo
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.ControllerTwo
  Jypeli.Game.ControllerThree:
    name:
      CSharp:
      - id: Jypeli.Game.ControllerThree
        name: ControllerThree
        nameWithType: Game.ControllerThree
        qualifiedName: Jypeli.Game.ControllerThree
        isExternal: true
      VB:
      - id: Jypeli.Game.ControllerThree
        name: ControllerThree
        nameWithType: Game.ControllerThree
        qualifiedName: Jypeli.Game.ControllerThree
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.ControllerThree
  Jypeli.Game.ControllerFour:
    name:
      CSharp:
      - id: Jypeli.Game.ControllerFour
        name: ControllerFour
        nameWithType: Game.ControllerFour
        qualifiedName: Jypeli.Game.ControllerFour
        isExternal: true
      VB:
      - id: Jypeli.Game.ControllerFour
        name: ControllerFour
        nameWithType: Game.ControllerFour
        qualifiedName: Jypeli.Game.ControllerFour
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.ControllerFour
  Jypeli.Game.ControlContext:
    name:
      CSharp:
      - id: Jypeli.Game.ControlContext
        name: ControlContext
        nameWithType: Game.ControlContext
        qualifiedName: Jypeli.Game.ControlContext
        isExternal: true
      VB:
      - id: Jypeli.Game.ControlContext
        name: ControlContext
        nameWithType: Game.ControlContext
        qualifiedName: Jypeli.Game.ControlContext
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.ControlContext
  Jypeli.Game.IsModal:
    name:
      CSharp:
      - id: Jypeli.Game.IsModal
        name: IsModal
        nameWithType: Game.IsModal
        qualifiedName: Jypeli.Game.IsModal
        isExternal: true
      VB:
      - id: Jypeli.Game.IsModal
        name: IsModal
        nameWithType: Game.IsModal
        qualifiedName: Jypeli.Game.IsModal
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.IsModal
  Jypeli.Game.DebugLayer:
    name:
      CSharp:
      - id: Jypeli.Game.DebugLayer
        name: DebugLayer
        nameWithType: Game.DebugLayer
        qualifiedName: Jypeli.Game.DebugLayer
        isExternal: true
      VB:
      - id: Jypeli.Game.DebugLayer
        name: DebugLayer
        nameWithType: Game.DebugLayer
        qualifiedName: Jypeli.Game.DebugLayer
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.DebugLayer
  Jypeli.Game.DebugKeyEnabled:
    name:
      CSharp:
      - id: Jypeli.Game.DebugKeyEnabled
        name: DebugKeyEnabled
        nameWithType: Game.DebugKeyEnabled
        qualifiedName: Jypeli.Game.DebugKeyEnabled
        isExternal: true
      VB:
      - id: Jypeli.Game.DebugKeyEnabled
        name: DebugKeyEnabled
        nameWithType: Game.DebugKeyEnabled
        qualifiedName: Jypeli.Game.DebugKeyEnabled
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.DebugKeyEnabled
  Jypeli.Game.DebugScreenVisible:
    name:
      CSharp:
      - id: Jypeli.Game.DebugScreenVisible
        name: DebugScreenVisible
        nameWithType: Game.DebugScreenVisible
        qualifiedName: Jypeli.Game.DebugScreenVisible
        isExternal: true
      VB:
      - id: Jypeli.Game.DebugScreenVisible
        name: DebugScreenVisible
        nameWithType: Game.DebugScreenVisible
        qualifiedName: Jypeli.Game.DebugScreenVisible
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.DebugScreenVisible
  Jypeli.Game.FPSWindow:
    name:
      CSharp:
      - id: Jypeli.Game.FPSWindow
        name: FPSWindow
        nameWithType: Game.FPSWindow
        qualifiedName: Jypeli.Game.FPSWindow
        isExternal: true
      VB:
      - id: Jypeli.Game.FPSWindow
        name: FPSWindow
        nameWithType: Game.FPSWindow
        qualifiedName: Jypeli.Game.FPSWindow
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.FPSWindow
  Jypeli.Game.FPSDisplay:
    name:
      CSharp:
      - id: Jypeli.Game.FPSDisplay
        name: FPSDisplay
        nameWithType: Game.FPSDisplay
        qualifiedName: Jypeli.Game.FPSDisplay
        isExternal: true
      VB:
      - id: Jypeli.Game.FPSDisplay
        name: FPSDisplay
        nameWithType: Game.FPSDisplay
        qualifiedName: Jypeli.Game.FPSDisplay
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.FPSDisplay
  Jypeli.Game.LayerWindow:
    name:
      CSharp:
      - id: Jypeli.Game.LayerWindow
        name: LayerWindow
        nameWithType: Game.LayerWindow
        qualifiedName: Jypeli.Game.LayerWindow
        isExternal: true
      VB:
      - id: Jypeli.Game.LayerWindow
        name: LayerWindow
        nameWithType: Game.LayerWindow
        qualifiedName: Jypeli.Game.LayerWindow
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.LayerWindow
  Jypeli.Game.LayerDisplay:
    name:
      CSharp:
      - id: Jypeli.Game.LayerDisplay
        name: LayerDisplay
        nameWithType: Game.LayerDisplay
        qualifiedName: Jypeli.Game.LayerDisplay
        isExternal: true
      VB:
      - id: Jypeli.Game.LayerDisplay
        name: LayerDisplay
        nameWithType: Game.LayerDisplay
        qualifiedName: Jypeli.Game.LayerDisplay
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.LayerDisplay
  Jypeli.Game.Wind:
    name:
      CSharp:
      - id: Jypeli.Game.Wind
        name: Wind
        nameWithType: Game.Wind
        qualifiedName: Jypeli.Game.Wind
        isExternal: true
      VB:
      - id: Jypeli.Game.Wind
        name: Wind
        nameWithType: Game.Wind
        qualifiedName: Jypeli.Game.Wind
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.Wind
  Jypeli.Game.TotalFramesToRun:
    name:
      CSharp:
      - id: Jypeli.Game.TotalFramesToRun
        name: TotalFramesToRun
        nameWithType: Game.TotalFramesToRun
        qualifiedName: Jypeli.Game.TotalFramesToRun
        isExternal: true
      VB:
      - id: Jypeli.Game.TotalFramesToRun
        name: TotalFramesToRun
        nameWithType: Game.TotalFramesToRun
        qualifiedName: Jypeli.Game.TotalFramesToRun
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.TotalFramesToRun
  Jypeli.Game.FrameCounter:
    name:
      CSharp:
      - id: Jypeli.Game.FrameCounter
        name: FrameCounter
        nameWithType: Game.FrameCounter
        qualifiedName: Jypeli.Game.FrameCounter
        isExternal: true
      VB:
      - id: Jypeli.Game.FrameCounter
        name: FrameCounter
        nameWithType: Game.FrameCounter
        qualifiedName: Jypeli.Game.FrameCounter
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.FrameCounter
  Jypeli.Game.SavedFrameCounter:
    name:
      CSharp:
      - id: Jypeli.Game.SavedFrameCounter
        name: SavedFrameCounter
        nameWithType: Game.SavedFrameCounter
        qualifiedName: Jypeli.Game.SavedFrameCounter
        isExternal: true
      VB:
      - id: Jypeli.Game.SavedFrameCounter
        name: SavedFrameCounter
        nameWithType: Game.SavedFrameCounter
        qualifiedName: Jypeli.Game.SavedFrameCounter
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.SavedFrameCounter
  Jypeli.Game.FramesToSkip:
    name:
      CSharp:
      - id: Jypeli.Game.FramesToSkip
        name: FramesToSkip
        nameWithType: Game.FramesToSkip
        qualifiedName: Jypeli.Game.FramesToSkip
        isExternal: true
      VB:
      - id: Jypeli.Game.FramesToSkip
        name: FramesToSkip
        nameWithType: Game.FramesToSkip
        qualifiedName: Jypeli.Game.FramesToSkip
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.FramesToSkip
  Jypeli.Game.SaveOutput:
    name:
      CSharp:
      - id: Jypeli.Game.SaveOutput
        name: SaveOutput
        nameWithType: Game.SaveOutput
        qualifiedName: Jypeli.Game.SaveOutput
        isExternal: true
      VB:
      - id: Jypeli.Game.SaveOutput
        name: SaveOutput
        nameWithType: Game.SaveOutput
        qualifiedName: Jypeli.Game.SaveOutput
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.SaveOutput
  Jypeli.Game.SaveOutputToConsole:
    name:
      CSharp:
      - id: Jypeli.Game.SaveOutputToConsole
        name: SaveOutputToConsole
        nameWithType: Game.SaveOutputToConsole
        qualifiedName: Jypeli.Game.SaveOutputToConsole
        isExternal: true
      VB:
      - id: Jypeli.Game.SaveOutputToConsole
        name: SaveOutputToConsole
        nameWithType: Game.SaveOutputToConsole
        qualifiedName: Jypeli.Game.SaveOutputToConsole
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.SaveOutputToConsole
  Jypeli.Game.Headless:
    name:
      CSharp:
      - id: Jypeli.Game.Headless
        name: Headless
        nameWithType: Game.Headless
        qualifiedName: Jypeli.Game.Headless
        isExternal: true
      VB:
      - id: Jypeli.Game.Headless
        name: Headless
        nameWithType: Game.Headless
        qualifiedName: Jypeli.Game.Headless
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.Headless
  Jypeli.Game.Device:
    name:
      CSharp:
      - id: Jypeli.Game.Device
        name: Device
        nameWithType: Game.Device
        qualifiedName: Jypeli.Game.Device
        isExternal: true
      VB:
      - id: Jypeli.Game.Device
        name: Device
        nameWithType: Game.Device
        qualifiedName: Jypeli.Game.Device
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.Device
  Jypeli.Game.DataStorage:
    name:
      CSharp:
      - id: Jypeli.Game.DataStorage
        name: DataStorage
        nameWithType: Game.DataStorage
        qualifiedName: Jypeli.Game.DataStorage
        isExternal: true
      VB:
      - id: Jypeli.Game.DataStorage
        name: DataStorage
        nameWithType: Game.DataStorage
        qualifiedName: Jypeli.Game.DataStorage
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.DataStorage
  Jypeli.Game.FarseerGame:
    name:
      CSharp:
      - id: Jypeli.Game.FarseerGame
        name: FarseerGame
        nameWithType: Game.FarseerGame
        qualifiedName: Jypeli.Game.FarseerGame
        isExternal: true
      VB:
      - id: Jypeli.Game.FarseerGame
        name: FarseerGame
        nameWithType: Game.FarseerGame
        qualifiedName: Jypeli.Game.FarseerGame
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.FarseerGame
  Jypeli.Game.Camera:
    name:
      CSharp:
      - id: Jypeli.Game.Camera
        name: Camera
        nameWithType: Game.Camera
        qualifiedName: Jypeli.Game.Camera
        isExternal: true
      VB:
      - id: Jypeli.Game.Camera
        name: Camera
        nameWithType: Game.Camera
        qualifiedName: Jypeli.Game.Camera
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.Camera
  Jypeli.Game.Name:
    name:
      CSharp:
      - id: Jypeli.Game.Name
        name: Name
        nameWithType: Game.Name
        qualifiedName: Jypeli.Game.Name
        isExternal: true
      VB:
      - id: Jypeli.Game.Name
        name: Name
        nameWithType: Game.Name
        qualifiedName: Jypeli.Game.Name
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.Name
  Jypeli.Game.AudioEnabled:
    name:
      CSharp:
      - id: Jypeli.Game.AudioEnabled
        name: AudioEnabled
        nameWithType: Game.AudioEnabled
        qualifiedName: Jypeli.Game.AudioEnabled
        isExternal: true
      VB:
      - id: Jypeli.Game.AudioEnabled
        name: AudioEnabled
        nameWithType: Game.AudioEnabled
        qualifiedName: Jypeli.Game.AudioEnabled
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.AudioEnabled
  Jypeli.Game.Level:
    name:
      CSharp:
      - id: Jypeli.Game.Level
        name: Level
        nameWithType: Game.Level
        qualifiedName: Jypeli.Game.Level
        isExternal: true
      VB:
      - id: Jypeli.Game.Level
        name: Level
        nameWithType: Game.Level
        qualifiedName: Jypeli.Game.Level
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.Level
  Jypeli.Game.Closing:
    name:
      CSharp:
      - id: Jypeli.Game.Closing
        name: Closing
        nameWithType: Game.Closing
        qualifiedName: Jypeli.Game.Closing
        isExternal: true
      VB:
      - id: Jypeli.Game.Closing
        name: Closing
        nameWithType: Game.Closing
        qualifiedName: Jypeli.Game.Closing
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.Closing
  Jypeli.Game.GraphicsDevice:
    name:
      CSharp:
      - id: Jypeli.Game.GraphicsDevice
        name: GraphicsDevice
        nameWithType: Game.GraphicsDevice
        qualifiedName: Jypeli.Game.GraphicsDevice
        isExternal: true
      VB:
      - id: Jypeli.Game.GraphicsDevice
        name: GraphicsDevice
        nameWithType: Game.GraphicsDevice
        qualifiedName: Jypeli.Game.GraphicsDevice
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.GraphicsDevice
  Jypeli.Game.IsFullScreen:
    name:
      CSharp:
      - id: Jypeli.Game.IsFullScreen
        name: IsFullScreen
        nameWithType: Game.IsFullScreen
        qualifiedName: Jypeli.Game.IsFullScreen
        isExternal: true
      VB:
      - id: Jypeli.Game.IsFullScreen
        name: IsFullScreen
        nameWithType: Game.IsFullScreen
        qualifiedName: Jypeli.Game.IsFullScreen
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.IsFullScreen
  Jypeli.Game.Screen:
    name:
      CSharp:
      - id: Jypeli.Game.Screen
        name: Screen
        nameWithType: Game.Screen
        qualifiedName: Jypeli.Game.Screen
        isExternal: true
      VB:
      - id: Jypeli.Game.Screen
        name: Screen
        nameWithType: Game.Screen
        qualifiedName: Jypeli.Game.Screen
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.Screen
  Jypeli.Game.SmoothTextures:
    name:
      CSharp:
      - id: Jypeli.Game.SmoothTextures
        name: SmoothTextures
        nameWithType: Game.SmoothTextures
        qualifiedName: Jypeli.Game.SmoothTextures
        isExternal: true
      VB:
      - id: Jypeli.Game.SmoothTextures
        name: SmoothTextures
        nameWithType: Game.SmoothTextures
        qualifiedName: Jypeli.Game.SmoothTextures
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.SmoothTextures
  Jypeli.Game.Layers:
    name:
      CSharp:
      - id: Jypeli.Game.Layers
        name: Layers
        nameWithType: Game.Layers
        qualifiedName: Jypeli.Game.Layers
        isExternal: true
      VB:
      - id: Jypeli.Game.Layers
        name: Layers
        nameWithType: Game.Layers
        qualifiedName: Jypeli.Game.Layers
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.Layers
  Jypeli.Game.StaticLayers:
    name:
      CSharp:
      - id: Jypeli.Game.StaticLayers
        name: StaticLayers
        nameWithType: Game.StaticLayers
        qualifiedName: Jypeli.Game.StaticLayers
        isExternal: true
      VB:
      - id: Jypeli.Game.StaticLayers
        name: StaticLayers
        nameWithType: Game.StaticLayers
        qualifiedName: Jypeli.Game.StaticLayers
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.StaticLayers
  Jypeli.Game.DynamicLayers:
    name:
      CSharp:
      - id: Jypeli.Game.DynamicLayers
        name: DynamicLayers
        nameWithType: Game.DynamicLayers
        qualifiedName: Jypeli.Game.DynamicLayers
        isExternal: true
      VB:
      - id: Jypeli.Game.DynamicLayers
        name: DynamicLayers
        nameWithType: Game.DynamicLayers
        qualifiedName: Jypeli.Game.DynamicLayers
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.DynamicLayers
  Jypeli.Game.MinLayer:
    name:
      CSharp:
      - id: Jypeli.Game.MinLayer
        name: MinLayer
        nameWithType: Game.MinLayer
        qualifiedName: Jypeli.Game.MinLayer
        isExternal: true
      VB:
      - id: Jypeli.Game.MinLayer
        name: MinLayer
        nameWithType: Game.MinLayer
        qualifiedName: Jypeli.Game.MinLayer
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.MinLayer
  Jypeli.Game.MaxLayer:
    name:
      CSharp:
      - id: Jypeli.Game.MaxLayer
        name: MaxLayer
        nameWithType: Game.MaxLayer
        qualifiedName: Jypeli.Game.MaxLayer
        isExternal: true
      VB:
      - id: Jypeli.Game.MaxLayer
        name: MaxLayer
        nameWithType: Game.MaxLayer
        qualifiedName: Jypeli.Game.MaxLayer
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.MaxLayer
  Jypeli.Game.LayerCount:
    name:
      CSharp:
      - id: Jypeli.Game.LayerCount
        name: LayerCount
        nameWithType: Game.LayerCount
        qualifiedName: Jypeli.Game.LayerCount
        isExternal: true
      VB:
      - id: Jypeli.Game.LayerCount
        name: LayerCount
        nameWithType: Game.LayerCount
        qualifiedName: Jypeli.Game.LayerCount
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.LayerCount
  Jypeli.Game.FixedTimeStep:
    name:
      CSharp:
      - id: Jypeli.Game.FixedTimeStep
        name: FixedTimeStep
        nameWithType: Game.FixedTimeStep
        qualifiedName: Jypeli.Game.FixedTimeStep
        isExternal: true
      VB:
      - id: Jypeli.Game.FixedTimeStep
        name: FixedTimeStep
        nameWithType: Game.FixedTimeStep
        qualifiedName: Jypeli.Game.FixedTimeStep
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.FixedTimeStep
  Jypeli.Game.IsPaused:
    name:
      CSharp:
      - id: Jypeli.Game.IsPaused
        name: IsPaused
        nameWithType: Game.IsPaused
        qualifiedName: Jypeli.Game.IsPaused
        isExternal: true
      VB:
      - id: Jypeli.Game.IsPaused
        name: IsPaused
        nameWithType: Game.IsPaused
        qualifiedName: Jypeli.Game.IsPaused
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.IsPaused
  Jypeli.Game.Time:
    name:
      CSharp:
      - id: Jypeli.Game.Time
        name: Time
        nameWithType: Game.Time
        qualifiedName: Jypeli.Game.Time
        isExternal: true
      VB:
      - id: Jypeli.Game.Time
        name: Time
        nameWithType: Game.Time
        qualifiedName: Jypeli.Game.Time
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.Time
  Jypeli.Game.RealTime:
    name:
      CSharp:
      - id: Jypeli.Game.RealTime
        name: RealTime
        nameWithType: Game.RealTime
        qualifiedName: Jypeli.Game.RealTime
        isExternal: true
      VB:
      - id: Jypeli.Game.RealTime
        name: RealTime
        nameWithType: Game.RealTime
        qualifiedName: Jypeli.Game.RealTime
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.RealTime
  Jypeli.Game.MessageDisplay:
    name:
      CSharp:
      - id: Jypeli.Game.MessageDisplay
        name: MessageDisplay
        nameWithType: Game.MessageDisplay
        qualifiedName: Jypeli.Game.MessageDisplay
        isExternal: true
      VB:
      - id: Jypeli.Game.MessageDisplay
        name: MessageDisplay
        nameWithType: Game.MessageDisplay
        qualifiedName: Jypeli.Game.MessageDisplay
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: P:Jypeli.Game.MessageDisplay
  Jypeli.Game.InstanceInitialized:
    name:
      CSharp:
      - id: Jypeli.Game.InstanceInitialized
        name: InstanceInitialized
        nameWithType: Game.InstanceInitialized
        qualifiedName: Jypeli.Game.InstanceInitialized
        isExternal: true
      VB:
      - id: Jypeli.Game.InstanceInitialized
        name: InstanceInitialized
        nameWithType: Game.InstanceInitialized
        qualifiedName: Jypeli.Game.InstanceInitialized
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: E:Jypeli.Game.InstanceInitialized
  Jypeli.Game.Exiting:
    name:
      CSharp:
      - id: Jypeli.Game.Exiting
        name: Exiting
        nameWithType: Game.Exiting
        qualifiedName: Jypeli.Game.Exiting
        isExternal: true
      VB:
      - id: Jypeli.Game.Exiting
        name: Exiting
        nameWithType: Game.Exiting
        qualifiedName: Jypeli.Game.Exiting
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: E:Jypeli.Game.Exiting
  Jypeli.Game.TextInput:
    name:
      CSharp:
      - id: Jypeli.Game.TextInput
        name: TextInput
        nameWithType: Game.TextInput
        qualifiedName: Jypeli.Game.TextInput
        isExternal: true
      VB:
      - id: Jypeli.Game.TextInput
        name: TextInput
        nameWithType: Game.TextInput
        qualifiedName: Jypeli.Game.TextInput
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: E:Jypeli.Game.TextInput
  Jypeli.Game.WindowSizeChanged:
    name:
      CSharp:
      - id: Jypeli.Game.WindowSizeChanged
        name: WindowSizeChanged
        nameWithType: Game.WindowSizeChanged
        qualifiedName: Jypeli.Game.WindowSizeChanged
        isExternal: true
      VB:
      - id: Jypeli.Game.WindowSizeChanged
        name: WindowSizeChanged
        nameWithType: Game.WindowSizeChanged
        qualifiedName: Jypeli.Game.WindowSizeChanged
        isExternal: true
    isDefinition: true
    parent: Jypeli.Game
    commentId: E:Jypeli.Game.WindowSizeChanged
  Jypeli.Controls:
    name:
      CSharp:
      - name: Jypeli.Controls
        nameWithType: Jypeli.Controls
        qualifiedName: Jypeli.Controls
        isExternal: true
      VB:
      - name: Jypeli.Controls
        nameWithType: Jypeli.Controls
        qualifiedName: Jypeli.Controls
    isDefinition: true
    commentId: N:Jypeli.Controls
  Jypeli.Controls.ControlContexted:
    name:
      CSharp:
      - id: Jypeli.Controls.ControlContexted
        name: ControlContexted
        nameWithType: ControlContexted
        qualifiedName: Jypeli.Controls.ControlContexted
        isExternal: true
      VB:
      - id: Jypeli.Controls.ControlContexted
        name: ControlContexted
        nameWithType: ControlContexted
        qualifiedName: Jypeli.Controls.ControlContexted
        isExternal: true
    isDefinition: true
    parent: Jypeli.Controls
    commentId: T:Jypeli.Controls.ControlContexted
  Jypeli.GameObjectContainer:
    name:
      CSharp:
      - id: Jypeli.GameObjectContainer
        name: GameObjectContainer
        nameWithType: GameObjectContainer
        qualifiedName: Jypeli.GameObjectContainer
        isExternal: true
      VB:
      - id: Jypeli.GameObjectContainer
        name: GameObjectContainer
        nameWithType: GameObjectContainer
        qualifiedName: Jypeli.GameObjectContainer
        isExternal: true
    isDefinition: true
    parent: Jypeli
    commentId: T:Jypeli.GameObjectContainer
  System.IDisposable:
    name:
      CSharp:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
      VB:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.IDisposable
  Jypeli.Game.Begin:
    name:
      CSharp:
      - id: Jypeli.Game.Begin
        name: Begin
        nameWithType: Game.Begin
        qualifiedName: Jypeli.Game.Begin
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Jypeli.Game.Begin
        name: Begin
        nameWithType: Game.Begin
        qualifiedName: Jypeli.Game.Begin
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Jypeli.Game
    commentId: M:Jypeli.Game.Begin
  Program.The_Duel.Begin*:
    name:
      CSharp:
      - id: Program.The_Duel.Begin*
        name: Begin
        nameWithType: The_Duel.Begin
        qualifiedName: Program.The_Duel.Begin
      VB:
      - id: Program.The_Duel.Begin*
        name: Begin
        nameWithType: The_Duel.Begin
        qualifiedName: Program.The_Duel.Begin
    isDefinition: true
    commentId: Overload:Program.The_Duel.Begin
  Program.The_Duel.CreateBoxes*:
    name:
      CSharp:
      - id: Program.The_Duel.CreateBoxes*
        name: CreateBoxes
        nameWithType: The_Duel.CreateBoxes
        qualifiedName: Program.The_Duel.CreateBoxes
      VB:
      - id: Program.The_Duel.CreateBoxes*
        name: CreateBoxes
        nameWithType: The_Duel.CreateBoxes
        qualifiedName: Program.The_Duel.CreateBoxes
    isDefinition: true
    commentId: Overload:Program.The_Duel.CreateBoxes
  Program.The_Duel:
    name:
      CSharp:
      - id: Program.The_Duel
        name: The_Duel
        nameWithType: The_Duel
        qualifiedName: Program.The_Duel
      VB:
      - id: Program.The_Duel
        name: The_Duel
        nameWithType: The_Duel
        qualifiedName: Program.The_Duel
    isDefinition: true
    commentId: T:Program.The_Duel
  Program:
    name:
      CSharp:
      - name: Program
        nameWithType: Program
        qualifiedName: Program
      VB:
      - name: Program
        nameWithType: Program
        qualifiedName: Program
    isDefinition: true
    commentId: N:Program
